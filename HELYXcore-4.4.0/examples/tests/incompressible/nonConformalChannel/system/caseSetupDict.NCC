/*--------------------------------*- C++ -*----------------------------------*\
|       o        |                                                            |
|    o     o     |  HELYX (R) : Open-source CFD for Enterprise                |
|   o   O   o    |  Version : 4.4.0                                           |
|    o     o     |  ENGYS Ltd. <http://engys.com/>                            |
|       o        |                                                            |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      caseSetupDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

global
{
    modificationSwitches
    {
        resetInternalFields true;
        resetBoundaryFields true;
        resetSystemDicts    true;
        resetConstDicts     true;
        resetBoundaryMesh   true;
        deleteUnusedFields  true;
    }
    system
    {
        controlDict
        {
            startFrom startTime;
            startTime 0;
            stopAt endTime;
            endTime 2;
            deltaT 0.005;
            writeControl adjustableRunTime;
            writeInterval 0.2;
            writePrecision 12;
            maxCo 5;
            meshChangers true;
        }
        nonConformalCouplesDict
        {
            nonConformalCyclic
            {
                patches          (interfaceUp interfaceDown);
                transformType    none;
            }
        }
    }
    functions
    {
        VR
        {
            type             volumeReport;
            fields           ( U p );
            executeControl   onEnd;
            writeControl     onEnd;
            outputFileFormat tsv;
        }
        inletFlowRate
        {
            type             surfaceFieldValue;
            libs             ("libfieldFunctionObjects.so");
            writeControl     timeStep;
            writeInterval    1;
            writeFields      false;
            log              false;
            regionType       patch;
            name             inlet;
            fields           (phi);
            operation        sum;
        }
        outletFlowRate
        {
            type             surfaceFieldValue;
            libs             ("libfieldFunctionObjects.so");
            writeControl     timeStep;
            writeInterval    1;
            writeFields      false;
            log              false;
            regionType       patch;
            name             outlet;
            fields           (phi);
            operation        sum;
        }
    }
}

regions
{
    region0
    {
        state ( PIMPLE incompressible ras );
        turbulenceModel laminar;
        materials (oil);
        boundaryMesh
        {
            interfaceUp
            {
                type     nonConformal;
                inGroups (nonCouple);
            }
            interfaceDown
            {
                type     nonConformal;
                inGroups (nonCouple);
            }
        }
        system
        {
            fvSolution
            {
                solvers
                {
                    p
                    {
                        solver                GAMG;
                        nCellsInCoarsestLevel 10;
                        smoother              DICGaussSeidel;
                        preconditioner        DIC;
                        tolerance             1e-8;
                        relTol                0;
                    }
                    pFinal
                    {
                        $p;
                    }
                }
                relaxationFactors
                {
                    fields
                    {
                        p               1;
                    }
                    equations
                    {
                        U               1;
                    }
                }
                PIMPLE
                {
                    nCorrectors         2;
                    nOuterCorrectors    1;
                }
            }
        }
        fields
        {
            U
            {
                initialisation
                {
                    type fixedValue;
                    value uniform (1 0 0);
                }
            }
            p
            {
                initialisation
                {
                    type fixedValue;
                    value uniform 0;
                }
            }
        }
        boundaryConditions
        {
            inlet
            {
                U
                {
                    type fixedValue;
                    value uniform (1 0 0);
                }
                p
                {
                    type fixedFluxPressure;
                }
            }
            outlet
            {
                U
                {
                    type pressureInletOutletVelocity;
                    value uniform (1 0 0);
                }
                p
                {
                    type totalPressure;
                    p0 uniform 0;
                    value uniform 0;
                }
            }
            walls
            {
                U
                {
                    type noSlip;
                }
                p
                {
                    type fixedFluxPressure;
                }
            }
            nonCouple
            {
                U
                {
                    type slip;
                }
                p
                {
                    type fixedFluxPressure;
                }
            }
        }
    }
}


// ************************************************************************* //
