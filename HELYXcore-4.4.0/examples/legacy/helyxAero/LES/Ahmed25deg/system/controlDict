/*--------------------------------*- C++ -*----------------------------------*\
|       o        |                                                            |
|    o     o     |  HELYX (R) : Open-source CFD for Enterprise                |
|   o   O   o    |  Version : 4.4.0                                           |
|    o     o     |  ENGYS Ltd. <http://engys.com/>                            |
|       o        |                                                            |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     helyxAero;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         0.5;

deltaT          0.0001;

writeControl    timeStep;

writeInterval   100;

purgeWrite      2;

writeFormat     ascii;

writePrecision  16;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

graphFormat     raw;

runTimeModifiable yes;

libs            1 ( "" );

adjustTimeStep  no;

maxCo           1;

maxDeltaT       1;

meshChangers    false;

functions
{
    LD1
    {
        patches         ( "ahmed.*" );
        functionObjectLibs ( "libforces.so" );
        porosity        true;
        nAveragingSteps 1;
        outputRegionData true;
        binData
        {
            nBins           100;
            axis            ( 1 0 0 );
        }
        maxCp           1;
        minCp           -2;
        Uinf            ( 40 0 0 );
        rhoInf          1.225;
        liftDirection   ( 0 0 1 );
        dragDirection   ( 1 0 0 );
        referenceArea   0.112032;
        referenceLength 1.044;
        referencePoint  ( 0 0 0 );
        wheelbase       1.044;
        executeControl  timeStep;
        type            liftDrag;
        name            ahmed;
        regions         1 ( region0 );
    }
    runTimeTermination
    {
        functionObjectLibs ( "libutilityFunctionObjects.so" );
        type            runTimeControl;
        log             true;
        timeStart       0.001;
        conditions
        {
            confIntv
            {
                type            confidenceInterval;
                functionObject  LD1;
                fields          ( "Cd" );
                confidence      0.99;
                targetInterval  0.001;
                intervalType    relative;
                log             true;
                minSamples      100;
            }
        }
    }
    VR
    {
        functionObjectLibs ( "libreport.so" );
        logToFile       yes;
        fields          ( U p nuTilda );
        executeControl  onEnd;
        type            volumeReport;
        regions         1 ( region0 );
        writeControl    onEnd;
        outputFileFormat tsv;
        sets            
        (
            boxToCell
            {
                box             ( -1000 -1000 -1000 ) ( 1000 1000 1000 );
            }

        )
;
    }
    fieldBlending
    {
        functionObjectLibs ( "libfieldFunctionObjects.so" );
        executeControl  timeStep;
        writeControl    writeTime;
        type            fieldBlendingFactor;
        blendingSources 
        (
            zonalDES
            {
                type            zonalDES;
                CDES            1;
                minValue        0;
                maxValue        1;
                minCoeff        0;
                maxCoeff        1;
                functionType    cubic;
                write           false;
            }

        )
;
        fieldBlending   
        (
            U
            {
                stabilise       10;
                blendingSources 
                (
                    cfl1
                    {
                        type            cfl;
                        minValue        2;
                        maxValue        4;
                        minCoeff        1;
                        maxCoeff        0;
                        functionType    cubic;
                        phi             phi;
                        rho             rho;
                        write           false;
                    }

                )
;
            }

        )
;
        regions         1 ( region0 );
    }
}


// ************************************************************************* //
