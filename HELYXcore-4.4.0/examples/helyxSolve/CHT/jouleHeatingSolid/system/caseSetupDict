/*--------------------------------*- C++ -*----------------------------------*\
|       o        |                                                            |
|    o     o     |  HELYX (R) : Open-source CFD for Enterprise                |
|   o   O   o    |  Version : 4.4.0                                           |
|    o     o     |  ENGYS Ltd. <http://engys.com/>                            |
|       o        |                                                            |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      caseSetupDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

global
{
    regionGroups
    (
        fluids ( )
        solids ( solid )
    );
    system
    {
        controlDict
        {
            application helyxSolve;
            startFrom startTime;
            startTime 0;
            stopAt endTime;
            endTime 2000;
            deltaT 1;
            writeControl timeStep;
            writeInterval 50.0;
            purgeWrite 2;
        }
    }
    functions
    {
        sample1
        {
            type            sets;
            libs            ("libsampling.so");
            writeControl    outputTime;
            region          solid;
            fields          (T electrical_V electrical_sigma);
            interpolationScheme cellPoint;
            setFormat       raw;
            sets
            (
                centreLine
                {
                    type        uniform;
                    axis        x;
                    start       (-2.5 0.05 0.05);
                    end         ( 2.5 0.05 0.05);
                    nPoints     20;
                }
            );
        }
        VR
        {
            type volumeReport;
            regions ( solid );
            fields ( h );
            writeControl timeStep;
            writeInterval 1;
            executeControl timeStep;
            executeInterval 1;
            functionObjectLibs ( "libreport.so" );
            outputFileFormat tsv;
        }
        VP
        {
            type probes;
            regions ( solid );
            probeLocations ( ( 0.0 0.05 0.05 ) );
            fields ( T electrical_V electrical_sigma );
            executeControl onEnd;
            writeControl onEnd;
            functionObjectLibs ( "libsampling.so" );
            outputFileFormat tsv;
        }
    }
}

regions
{
    solid
    {
        state (steady solid electricalConduction);
        turbulenceModel laminar;
        materials (solidMaterial);
        materialProperties
        {
            solidMaterial
            {
                materialType    solid;

                equationOfState rhoConst;
                equationOfStateCoeffs
                {
                    rho     8000;
                }

                thermodynamics  hConst;
                thermodynamicsCoeffs
                {
                    Hf      0;
                    Cp      700;
                }

                energy          sensibleEnthalpy;
                molWeight       12;

                kappaModel      constSolid;
                kappaModelCoeffs
                {
                    kappa   200;
                }

            }
        }
        system
        {
            fvOptions
            {
                electricPotential
                {
                    type electrostaticPotentialSolver;

                    anisotropicConductivity no;

                    // Optionally specify sigma as a function of temperature
                    sigma           127599.8469;
                }
                heatSource
                {
                    type jouleHeatingSource;
                }
            }
        }
        boundaryMesh
        {
            left
            {
                type wall;
            }
            right
            {
                type wall;
            }
            top
            {
                type wall;
            }
            bottom
            {
                type wall;
            }
        }
        fields
        {
            T
            {
                initialisation
                {
                    type fixedValue;
                    value uniform 500.0;
                }
            }
            electrical_V
            {
                initialisation
                {
                    type fixedValue;
                    value uniform 0;
                }
            }
        }
        boundaryConditions
        {
            left
            {
                electrical_V
                {
                    type            fixedValue;
                    value           uniform 1.5;
                }
                T
                {
                    type            fixedValue;
                    value           uniform 500;
                }
            }
            right
            {
                electrical_V
                {
                    type            fixedValue;
                    value           uniform 0;
                }
                T
                {
                    type            fixedValue;
                    value           uniform 500;
                }
            }
        }
    }
}


// ************************************************************************* //
