/*--------------------------------*- C++ -*----------------------------------*\
|       o          |                                                          |
|    o     o       | HELYX(R): Open-source CFD for Enterprise                 |
|   o   O   o      | Version: 4.4.0                                           |
|    o     o       | Engys Ltd. http://www.engys.com                          |
|       o          |                                                          |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version 2.0;
    format ascii;
    class dictionary;
    location system;
    object caseSetupDict;
}
global
{
    regionGroups
    (
        fluids ( default )
        solids ( solid )
    );
    modificationSwitches
    {
        resetInternalFields true;
        resetBoundaryFields true;
        resetSystemDicts true;
        resetConstDicts true;
        resetBoundaryMesh true;
        deleteUnusedFields true;
        reuseExistingDicts false;
        strictPatchNameChecking false;
    }
    system
    {
        controlDict
        {
            application helyxSolve;
            startFrom latestTime;
            startTime 0;
            stopAt endTime;
            endTime 16000.0;
            deltaT constant 1.0;
            writeControl timeStep;
            writeInterval 1000;
            purgeWrite 0;
            writeFormat binary;
            writePrecision 10;
            writeCompression uncompressed;
            writeEndTime true;
            timeFormat general;
            timePrecision 6;
            graphFormat raw;
            runTimeModifiable yes;
            libs ( "" );
            adjustTimeStep false;
            maxCo 0;
            maxAlphaCo 0;
            minDeltaT 0;
            maxDeltaT 0;
        }
    }
    functions
    {
        VR1
        {
            type volumeReport;
            regions (solid);
            fields (T);
            writeControl timeStep;
            writeInterval 1;
            executeControl timeStep;
            executeInterval 1;
            functionObjectLibs ("libreport.so" );
        }
        VR2
        {
            type volumeReport;
            regions ( default);
            fields ( T Tsolid_zone );
            writeControl timeStep;
            writeInterval 1;
            executeControl timeStep;
            executeInterval 1;
            functionObjectLibs ("libreport.so" );
        }
    }
}
regions
{
    fluids
    {
        materialProperties
        {
            air
            {
                materialName air;
                materialType fluid;
                molWeight 28.96;
                energy sensibleEnthalpy;
                equationOfState rhoConst;
                equationOfStateCoeffs
                {
                    rho 1.177;
                }
                muModel scalarFunction1;
                muModelCoeffs
                {
                    mu constant 1.846E-5;
                }
                thermodynamics hConst;
                thermodynamicsCoeffs
                {
                    Hf 0.0;
                    Cp 1004.9;
                }
                kappaModel scalarFunction1;
                kappaModelCoeffs
                {
                    kappa 0.0262;
                }
                wconcentrationTransport
                {
                    D [0 2 -1 0 0 0 0] 2.0E-5;
                    Sct 0.6;
                    Cp [0 2 -2 -1 0 0 0] 1930.0;
                }
                buoyancyModelCoeffs
                {
                    beta 0.0034;
                    rho0 1.0;
                    T0 300.0;
                }
                referenceFields
                {
                    p [1 -1 -2 0 0 0 0] 101325.0;
                }
                buoyancyModel Boussinesq;
            }
        }
    }

    solids
    {
        materialProperties
        {
            steel
            {
                materialName steel;
                materialType solid;
                molWeight 55.85;
                energy sensibleEnthalpy;
                equationOfState rhoConst;
                equationOfStateCoeffs
                {
                    rho 7740.0;
                }
                thermodynamics hConst;
                thermodynamicsCoeffs
                {
                    Hf 0.0;
                    Cp 490.0;
                }
                kappaModel constSolid;
                kappaModelCoeffs
                {
                    anisotropic false;
                    kappa 16.0;
                }
            }
        }
    }

    default
    {
        state (steady ras energy radiation);
        boundaryMesh
        {
            region
            {
                type wall;
            }
            default_to_solid
            {
                type mappedWall;
                sampleMode nearestPatchFaceAMI;
                sampleRegion solid;
                samplePatch solid_to_default;
            }
        }
        turbulenceModel laminar;
        materials (air);
        constant
        {
            g
            {
                value ( 0.0 0.0 -9.81 );
                dimensions [0  1 -2  0 0 0 0];
            }
            turbulenceProperties
            {
                simulationType laminar;
            }
            radiationProperties
            {
                radiationModel fvDOM;
                fvDOMCoeffs
                {
                    nPhi 2;
                    nTheta 4;
                    convergence 0.001;
                    maxIter 10;
                    initialConvergence 0.001;
                    initialMaxIter 50;
                }
                solverFreq 10;
                radiation on;
                participating yes;
                scatterModel none;
                sootModel none;
                transmissivityModel none;
                absorptionEmissionModel none;
                solarLoadMode none;
            }
            boundaryRadiationProperties
            {
                region
                {
                    mode lookup;
                    emissivity 1.0;
                    transmissivity 0.0;
                    Ta constant 300.0;
                }
                default_to_solid
                {
                    mode lookup;
                    emissivity 1.0;
                    transmissivity 0.0;
                    Ta constant 300.0;
                }
            }
        }
        system
        {
            fvSchemes
            {
                ddtSchemes
                {
                    default steadyState;
                }
                gradSchemes
                {
                    default cellLimited Gauss linear 1.0;
                    grad(e) cellLimited Gauss linear 1.0;
                    grad(K) cellLimited Gauss linear 1.0;
                    grad(T) cellLimited Gauss linear 1.0;
                    gradU cellLimited Gauss linear 1.0;
                    grad(p) leastSquares;
                    grad(h) cellLimited Gauss linear 1.0;
                }
                divSchemes
                {
                    div(phi,U) bounded Gauss linearUpwindV gradU;
                    default none;
                    div(R) Gauss linear;
                    div((rho*R)) Gauss linear;
                    div(nonlinearStress) Gauss linear;
                    div((muEff*dev2(grad(U).T()))) Gauss linear;
                    div((nuEff*dev2(T(grad(U))))) Gauss linear;
                    div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;
                    div((nu*dev2(T(grad(U))))) Gauss linear;
                    div(((rho*(mu|rho))*dev2(T(grad(U))))) Gauss linear;
                    div(phi,h) bounded Gauss deferred vanLeer;
                    div(phi,e) bounded Gauss deferred vanLeer;
                    div(phi,T) bounded Gauss deferred vanLeer;
                    div(phi,K) bounded Gauss deferred vanLeer;
                    div(phiv,p) Gauss deferred vanLeer;
                    div(Ji,Ii_h) bounded Gauss upwind;
                }
                laplacianSchemes
                {
                    laplacian((rho*nuEff),U) Gauss linear limited 0.333;
                    laplacian(rhorAUf,p) Gauss linear limited 0.333;
                    default Gauss linear limited 0.333;
                    laplacian(kappa,T) compactGauss linear limited 0.333;
                }
                interpolationSchemes
                {
                    default linear;
                    interpolate(HbyA) linear;
                }
                snGradSchemes
                {
                    default limited 0.333;
                }
                wallDist
                {
                    method meshWave;
                }
            }
            fvSolution
            {
                solvers
                {
                    p
                    {
                        solver GAMG;
                        agglomerator faceAreaPair;
                        mergeLevels 1;
                        cacheAgglomeration true;
                        nCellsInCoarsestLevel 200;
                        smoother symGaussSeidel;
                        minIter 1;
                        scaleCorrection true;
                        tolerance 1e-10;
                        relTol 0.01;
                    }
                    U
                    {
                        solver smoothSolver;
                        smoother symGaussSeidel;
                        minIter 1;
                        tolerance 1e-6;
                        relTol 0.1;
                        nSweeps 2;
                    }
                    h
                    {
                        solver GAMG;
                        agglomerator algebraicPair;
                        mergeLevels 1;
                        cacheAgglomeration true;
                        nCellsInCoarsestLevel 200;
                        smoother symGaussSeidel;
                        minIter 1;
                        maxIter 20;
                        scaleCorrection true;
                        tolerance 1e-7;
                        relTol 0.001;
                    }
                    e
                    {
                        solver GAMG;
                        agglomerator algebraicPair;
                        mergeLevels 1;
                        cacheAgglomeration true;
                        nCellsInCoarsestLevel 200;
                        smoother symGaussSeidel;
                        minIter 1;
                        maxIter 20;
                        scaleCorrection true;
                        tolerance 1e-7;
                        relTol 0.001;
                    }
                    T
                    {
                        solver GAMG;
                        agglomerator algebraicPair;
                        mergeLevels 1;
                        cacheAgglomeration true;
                        nCellsInCoarsestLevel 200;
                        smoother symGaussSeidel;
                        minIter 1;
                        maxIter 20;
                        scaleCorrection true;
                        tolerance 1e-7;
                        relTol 0.001;
                    }
                    Ii
                    {
                        solver GAMG;
                        tolerance 1e-4;
                        relTol 0.1;
                        smoother symGaussSeidel;
                        cacheAgglomeration true;
                        nCellsInCoarsestLevel 10;
                        agglomerator faceAreaPair;
                        mergeLevels 1;
                        maxIter 3;
                        nPreSweeps 0;
                        nPostSweeps 1;
                    }
                }
                relaxationFactors
                {
                    fields
                    {
                        p 0.3;
                        rho 0.05;
                    }
                    equations
                    {
                        U 0.7;
                        h 0.9;
                        e 0.9;
                        T 0.9;
                        "ILambda.*Final" 1.0;
                        "ILambda.*" 0.7;
                    }
                }
                SIMPLE
                {
                    residualControl
                    {
                        U 1.0E-5;
                        p 1.0E-5;
                        h 1.0E-5;
                    }
                    nNonOrthogonalCorrectors 0;
                    pRefCell 0;
                    pRefValue 0;
                    pMin -1e10;
                    pMax 1e10;
                    modifiedMomentumInterp true;
                    consistent false;
                    transonic false;
                }
                cache
                {
                    grad(U) ;
                }
            }
            fvOptions
            {
                flowSolver
                {
                    type rhieChowFlowSolver;
                }
                fluidEnergySolver
                {
                    type fluidEnergySolver;
                }
                radiationSolver
                {
                    type radiationSolver;
                }
                zone_PO
                {
                    type explicitPorositySource;
                    explicitPorositySourceCoeffs
                    {
                        selectionMode cellZone;
                        cellZone zone;
                        type DarcyForchheimer;
                        DarcyForchheimerCoeffs
                        {
                            coeffsMode standard;
                            d [0 -2 0 0 0 0 0] ( 1000000.0 1000000.0 1000000.0 );
                            f [0 -1 0 0 0 0 0] ( 1000000.0 1000000.0 1000000.0 );
                            temperatureDependence false;
                            spatialDependance false;
                        }
                    }
                }
                zone_LAE
                {
                    type porousAbsorptionEmissionSource;
                    active true;
                    porousAbsorptionEmissionSourceCoeffs
                    {
                        selectionMode cellZone;
                        cellZone zone;
                        fields
                        (
                            ILambda_0_0 ILambda_1_0 ILambda_2_0 ILambda_3_0 
                            ILambda_4_0 ILambda_5_0 ILambda_6_0 ILambda_7_0 
                            ILambda_8_0 ILambda_9_0 ILambda_10_0 ILambda_11_0 
                            ILambda_12_0 ILambda_13_0 ILambda_14_0 ILambda_15_0 
                            ILambda_16_0 ILambda_17_0 ILambda_18_0 ILambda_19_0 
                            ILambda_20_0 ILambda_21_0 ILambda_22_0 ILambda_23_0 
                            ILambda_24_0 ILambda_25_0 ILambda_26_0 ILambda_27_0 
                            ILambda_28_0 ILambda_29_0 ILambda_30_0 ILambda_31_0 
                            h
                        );
                        emissivity 1.0;
                        E constant 0.0;
                        solarHeat false;
                        rhoSolid    2000;
                        CpSolid     1000;
                        hCoefficient    23;
                    }
                }
            }
        }
        fields
        {
            U
            {
                initialisation
                {
                    type fixedValue;
                    value uniform ( 0.0 0.0 0.0 );
                }
            }
            p
            {
                initialisation
                {
                    type fixedValue;
                    value uniform 0.0;
                }
            }
            T
            {
                initialisation
                {
                    type fixedValue;
                    value uniform 300.0;
                }
            }
        }
        boundaryConditions
        {
            region
            {
                U
                {
                    type wallVelocity;
                    value uniform ( 0.0 0.0 0.0 );
                }
                p
                {
                    type fixedFluxPressure;
                    value uniform 0.0;
                }
                T
                {
                    type fixedValue;
                    value uniform 1000.0;
                }
            }
            default_to_solid
            {
                U
                {
                    type wallVelocity;
                    value uniform ( 0.0 0.0 0.0 );
                }
                p
                {
                    type fixedFluxPressure;
                    value uniform 0.0;
                }
                T
                {
                    type regionCoupledEnergyFlux;
                    value uniform 300.0;
                }
            }
        }
    }
    solid
    {
        state (steady solid);
        boundaryMesh
        {
            solid_to_default
            {
                type mappedWall;
                sampleMode nearestPatchFaceAMI;
                sampleRegion default;
                samplePatch default_to_solid;
            }
        }
        turbulenceModel laminar;
        materials (steel);
        constant
        {
            g
            {
                value ( 0.0 0.0 -9.81 );
                dimensions [0  1 -2  0 0 0 0];
            }
        }
        system
        {
            fvSchemes
            {
                ddtSchemes
                {
                    default steadyState;
                }
                gradSchemes
                {
                    default Gauss linear;
                    grad(e) Gauss linear;
                    grad(h) Gauss linear;
                }
                divSchemes
                {
                    default none;
                }
                laplacianSchemes
                {
                    default Gauss linear uncorrected;
                    laplacian(kappa,T) compactGauss linear limited 0.333;
                }
                interpolationSchemes
                {
                    default linear;
                }
                snGradSchemes
                {
                    default uncorrected;
                }
                wallDist
                {
                    method meshWave;
                }
                fluxRequired
                {
                    default no;
                }
            }
            fvSolution
            {
                solvers
                {
                    h
                    {
                        solver GAMG;
                        agglomerator faceAreaPair;
                        mergeLevels 1;
                        cacheAgglomeration true;
                        nCellsInCoarsestLevel 200;
                        smoother symGaussSeidel;
                        minIter 1;
                        maxIter 20;
                        scaleCorrection true;
                        tolerance 1e-7;
                        relTol 0.001;
                    }
                    e
                    {
                        solver smoothSolver;
                        smoother symGaussSeidel;
                        minIter 1;
                        tolerance 1e-6;
                        relTol 0.1;
                    }
                    T
                    {
                        solver smoothSolver;
                        smoother symGaussSeidel;
                        minIter 1;
                        tolerance 1e-6;
                        relTol 0.1;
                    }
                    e_h
                    {
                        solver smoothSolver;
                        smoother symGaussSeidel;
                        minIter 1;
                        tolerance 1e-6;
                        relTol 0.1;
                    }
                    T_h
                    {
                        solver smoothSolver;
                        smoother symGaussSeidel;
                        minIter 1;
                        tolerance 1e-6;
                        relTol 0.1;
                    }
                    T_e
                    {
                        solver smoothSolver;
                        smoother symGaussSeidel;
                        minIter 1;
                        tolerance 1e-6;
                        relTol 0.1;
                    }
                    T_e_h
                    {
                        solver smoothSolver;
                        smoother symGaussSeidel;
                        minIter 1;
                        tolerance 1e-6;
                        relTol 0.1;
                    }
                }
                relaxationFactors
                {
                    fields
                    {
                    }
                    equations
                    {
                        h 0.9;
                        e 0.9;
                    }
                }
                SIMPLE
                {
                    residualControl
                    {
                        h 1.0E-5;
                    }
                    nNonOrthogonalCorrectors 0;
                    consistent false;
                    transonic false;
                }
            }
            fvOptions
            {
                solidHeatConductionSolver
                {
                    type solidHeatConductionSolver;
                }
                solid_TSI
                {
                    type scalarTimeDependentSemiImplicitSource;
                    active true;
                    scalarTimeDependentSemiImplicitSourceCoeffs
                    {
                        selectionMode cellZone;
                        cellZone solid;
                        volumeMode absolute;
                        injectionRateSu
                        {
                            h constant 80.0;
                        }
                        injectionRateSp
                        {
                            h constant 0.0;
                        }
                    }
                }
            }
        }
        fields
        {
            T
            {
                initialisation
                {
                    type fixedValue;
                    value uniform 300.0;
                }
            }
        }
        boundaryConditions
        {
            solid_to_default
            {
                T
                {
                    type regionCoupledEnergyFlux;
                    value uniform 301.0;
                }
            }
        }
    }
}

