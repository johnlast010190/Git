/*--------------------------------*- C++ -*----------------------------------*\
|       o        |                                                            |
|    o     o     |  HELYX (R) : Open-source CFD for Enterprise                |
|   o   O   o    |  Version : 4.4.0                                           |
|    o     o     |  ENGYS Ltd. <http://engys.com/>                            |
|       o        |                                                            |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     helyxSolve;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         100;

deltaT          0.005;

writeControl    adjustableRunTime;

writeInterval   1;

purgeWrite      0;

writeFormat     ascii;

writePrecision  10;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

graphFormat     raw;

runTimeModifiable yes;

libs            1 ( "" );

adjustTimeStep  no;

maxCo           0.666;

maxDeltaT       1;

maxAlphaCo      0.333;

functions
{
    VR1
    {
        functionObjectLibs ( "libreport.so" );
        logToFile       yes;
        fields          ( U.air p T.air T.water );
        executeControl  writeTime;
        type            volumeReport;
        libs            ( "libreport.so" );
        writeControl    writeTime;
    }
    fieldAverage1
    {
        functionObjectLibs ( "libfieldFunctionObjects.so" );
        fields          
        (
            U.air
            {
                mean            on;
                prime2Mean      off;
                base            time;
            }

            U.water
            {
                mean            on;
                prime2Mean      off;
                base            time;
            }

            alpha.air
            {
                mean            on;
                prime2Mean      off;
                base            time;
            }

            p
            {
                mean            on;
                prime2Mean      off;
                base            time;
            }

        )
;
        executeControl  timeStep;
        writeControl    writeTime;
        type            fieldAverage;
        libs            ( "libfieldFunctionObjects.so" );
    }
}


// ************************************************************************* //
