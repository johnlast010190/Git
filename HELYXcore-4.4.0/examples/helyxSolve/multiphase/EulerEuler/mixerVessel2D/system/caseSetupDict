/*--------------------------------*- C++ -*----------------------------------*\
|       o        |                                                            |
|    o     o     |  HELYX (R) : Open-source CFD for Enterprise                |
|   o   O   o    |  Version : 4.4.0                                           |
|    o     o     |  ENGYS Ltd. <http://engys.com/>                            |
|       o        |                                                            |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      caseSetupDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

global
{
    system
    {
        controlDict
        {
            deltaT          1e-4;
            endTime         5;
            writeInterval   0.01;
            adjustTimeStep  yes;
            maxCo           0.5;
        }
    }
    functions
    {
        VR1
        {
            type volumeReport;
            fields (U.air p T.air);
            libs ( "libreport.so" );
            executeControl writeTime;
            writeControl writeTime;
        }
    }
}

regions
{
    region0
    {
        state ( transient ras multiphaseEuler energy );

        materials ( water oil mercury air );

        materialProperties
        {
            materialType    multiphase;
            buoyancyModel   none;

            air
            {
                materialType    fluid;
                thermodynamics  hConst;
                equationOfState perfectGas;
                molWeight       28.9;
                thermodynamicsCoeffs
                {
                    Cp              1007;
                    Hf              0;
                }
                muModel         scalarFunction1;
                muModelCoeffs
                {
                    mu              1.84e-05;
                }
                kappaModel      kappaPrandtl;
                kappaModelCoeffs
                {
                    Pr              0.7;
                }
            }

            mercury
            {
                materialType    fluid;
                thermodynamics  eConst;
                equationOfState rhoConst;
                molWeight       200.59;

                equationOfStateCoeffs
                {
                    rho        13529;
                }
                thermodynamicsCoeffs
                {
                    Cv          139;
                    Hf          0;
                }
                muModel scalarFunction1;
                muModelCoeffs
                {
                    mu          1.522e-3;
                }
                kappaModel kappaPrandtl;
                kappaModelCoeffs
                {
                    Pr          0.022;
                }

                phaseModel pure;
                phaseModelCoeffs
                {
                    diameterModel   constant;
                    diameterModelCoeffs
                    {
                        d               1e-3;
                    }

                    residualAlpha 1e-3;
                }
            }

            oil
            {
                materialType    fluid;
                thermodynamics  eConst;
                equationOfState rhoConst;
                molWeight       100.21;

                equationOfStateCoeffs
                {
                    rho        684;
                }
                thermodynamicsCoeffs
                {
                    Cv          2240;
                    Hf          0;
                }
                muModel scalarFunction1;
                muModelCoeffs
                {
                    mu          3.76e-4;
                }
                kappaModel kappaPrandtl;
                kappaModelCoeffs
                {
                    Pr          6;
                }

                phaseModel pure;
                phaseModelCoeffs
                {
                    diameterModel   constant;
                    diameterModelCoeffs
                    {
                        d               1e-3;
                    }

                    residualAlpha 1e-3;
                }
            }

            water
            {
                materialType    fluid;
                thermodynamics  eConst;
                equationOfState rhoConst;
                molWeight   18.0;

                equationOfStateCoeffs
                {
                    rho        1000;
                }
                thermodynamicsCoeffs
                {
                    Cv          4195;
                    Hf          0;
                }
                muModel scalarFunction1;
                muModelCoeffs
                {
                    mu          3.645e-4;
                }
                kappaModel kappaPrandtl;
                kappaModelCoeffs
                {
                    Pr          2.289;
                }
            }

            air_oil
            {
                dragModel SchillerNaumann;
                dragModelCoeffs
                {
                    residualRe      1e-3;
                    swarmCorrectionModel none;
                }
                heatTransferModel RanzMarshall;
                heatTransferModelCoeffs
                {
                    residualAlpha   1e-3;
                }
                virtualMassModel constantCoefficient;
                virtualMassModelCoeffs
                {
                    Cvm             0.5;
                }
            }
            air_mercury
            {
                dragModel SchillerNaumann;
                dragModelCoeffs
                {
                    residualRe      1e-3;
                    swarmCorrectionModel none;
                }
                heatTransferModel RanzMarshall;
                heatTransferModelCoeffs
                {
                    residualAlpha   1e-3;
                }
                virtualMassModel constantCoefficient;
                virtualMassModelCoeffs
                {
                    Cvm             0.5;
                }
            }

            mercury_air
            {
                dragModel SchillerNaumann;
                dragModelCoeffs
                {
                    residualRe      1e-3;
                    swarmCorrectionModel none;
                }
                heatTransferModel RanzMarshall;
                heatTransferModelCoeffs
                {
                    residualAlpha   1e-3;
                }
            }
            mercury_oil
            {
                dragModel SchillerNaumann;
                dragModelCoeffs
                {
                    residualRe      1e-3;
                    swarmCorrectionModel none;
                }
                heatTransferModel RanzMarshall;
                heatTransferModelCoeffs
                {
                    residualAlpha   1e-3;
                }
            }
            mercury_water
            {
                dragModel SchillerNaumann;
                dragModelCoeffs
                {
                    residualRe      1e-3;
                    swarmCorrectionModel none;
                }
                heatTransferModel RanzMarshall;
                heatTransferModelCoeffs
                {
                    residualAlpha   1e-3;
                }
            }

            oil_air
            {
                dragModel SchillerNaumann;
                dragModelCoeffs
                {
                    residualRe      1e-3;
                    swarmCorrectionModel none;
                }
                heatTransferModel RanzMarshall;
                heatTransferModelCoeffs
                {
                    residualAlpha   1e-3;
                }
            }
            oil_water
            {
                dragModel SchillerNaumann;
                dragModelCoeffs
                {
                    residualRe      1e-3;
                    swarmCorrectionModel none;
                }
                heatTransferModel RanzMarshall;
                heatTransferModelCoeffs
                {
                    residualAlpha   1e-3;
                }
            }
            oil_mercury
            {
                dragModel SchillerNaumann;
                dragModelCoeffs
                {
                    residualRe      1e-3;
                    swarmCorrectionModel none;
                }
                heatTransferModel RanzMarshall;
                heatTransferModelCoeffs
                {
                    residualAlpha   1e-3;
                }
            }

            water_oil
            {
                dragModel SchillerNaumann;
                dragModelCoeffs
                {
                    residualRe      1e-3;
                    swarmCorrectionModel none;
                }
                heatTransferModel RanzMarshall;
                heatTransferModelCoeffs
                {
                    residualAlpha   1e-3;
                }
            }
            water_mercury
            {
                dragModel SchillerNaumann;
                dragModelCoeffs
                {
                    residualRe      1e-3;
                    swarmCorrectionModel none;
                }
                heatTransferModel RanzMarshall;
                heatTransferModelCoeffs
                {
                    residualAlpha   1e-3;
                }
            }

            "oil_.*"
            {
                dragModelSymmetric segregated;
                dragModelSymmetricCoeffs
                {
                    m               0.5;
                    n               8;
                    swarmCorrectionModel none;
                }
            }
            "mercury_.*"
            {
                dragModelSymmetric segregated;
                dragModelSymmetricCoeffs
                {
                    m               0.5;
                    n               8;
                    swarmCorrectionModel none;
                }
            }

            water_oil
            {
                surfaceTensionModel constant;
                surfaceTensionModelCoeffs
                {
                    sigma           0.032;
                }
            }
            water_mercury
            {
                surfaceTensionModel constant;
                surfaceTensionModelCoeffs
                {
                    sigma           0.49;
                }
            }
            oil_mercury
            {
                surfaceTensionModel constant;
                surfaceTensionModelCoeffs
                {
                    sigma           0.4;
                }
            }

            referenceFields
            {
                p [1 -1 -2 0 0 0 0] 101325;
            }
        }

        turbulenceModel laminar;

        system
        {
            meshObjects
            {
                rotatingFrame
                {
                    type            motionCoordinateFrame;
                    motionFunction
                    {
                        type rotatingMotion;
                        omega               10.472;
                    }
                    coordinateSystem
                    {
                        type            cartesian;
                        origin          ( 0 0 0 );
                        e1              ( 1 0 0 );
                        e2              ( 0 1 0 );
                    }
                }
            }

            fvOptions
            {
                MRF1
                {
                    type        MRFSource;
                    active      yes;

                    MRFSourceCoeffs
                    {
                        selectionMode cellZone;
                        cellZone    rotor;
                        referenceFrame rotatingFrame;
                    }
                }
            }
        }

        boundaryMesh
        {
            front
            {
                type empty;
            }
            back
            {
                type empty;
            }
            rotor
            {
                type wall;
            }
            stator
            {
                type wall;
            }
        }

        fields
        {
            "U.*" {initialisation{type fixedValue; value uniform ( 0 0 0 );} }
            p {initialisation{type fixedValue; value uniform 0;} }
            "T." {initialisation{type fixedValue; value uniform 300;} }
            alpha.water {initialisation{type fixedValue; value uniform 0.7; } }
            alpha.oil {initialisation{type fixedValue; value uniform 0.1; } }
            alpha.mercury {initialisation{type fixedValue; value uniform 0.1; } }
            alpha.air {initialisation{type fixedValue; value uniform 0.1; } }
        }

        boundaryConditions
        {
            rotor
            {
                "U.*"
                {
                    type            fixedValueVelocity;
                    referenceFrame  rotatingFrame;
                    value uniform (0 0 0);
                }
            }
        }
    }
}


// ************************************************************************* //

