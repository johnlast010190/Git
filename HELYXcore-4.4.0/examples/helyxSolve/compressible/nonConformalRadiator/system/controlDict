/*--------------------------------*- C++ -*----------------------------------*\
|       o        |                                                            |
|    o     o     |  HELYX (R) : Open-source CFD for Enterprise                |
|   o   O   o    |  Version : 4.4.0                                           |
|    o     o     |  ENGYS Ltd. <http://engys.com/>                            |
|       o        |                                                            |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     helyxSolve;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         500;

deltaT          constant 1;

writeControl    timeStep;

writeInterval   100;

purgeWrite      0;

writeFormat     ascii;

writePrecision  8;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

graphFormat     raw;

runTimeModifiable true;

libs            1 ( "" );

adjustTimeStep  false;

maxCo           0;

maxAlphaCo      0;

minDeltaT       0;

maxDeltaT       0;

functions
{
    FP
    {
        functionObjectLibs ( "libfieldFunctionObjects.so" );
        operations      ( { operation ptot ; fieldName ptot ; write true ; nearCellValue false ; U U ; p p ; } );
        executeControl  timeStep;
        writeControl    outputTimeAndEnd;
        type            fieldProcess;
        regions         ( region0 );
        executeInterval 1;
        writeInterval   1;
    }
    VR_cooler
    {
        functionObjectLibs ( "libreport.so" );
        logToFile       yes;
        fields          ( T U p ptot );
        executeControl  onEnd;
        type            volumeReport;
        sets            
        (
            zoneToCell
            {
                name            coolerRad;
            }

        )
;
        regions         ( region0 );
        writeControl    onEnd;
        outputFileFormat tsv;
    }
    VR_heater
    {
        functionObjectLibs ( "libreport.so" );
        logToFile       yes;
        fields          ( T U p ptot );
        executeControl  onEnd;
        type            volumeReport;
        sets            
        (
            zoneToCell
            {
                name            heaterRad;
            }

        )
;
        regions         ( region0 );
        writeControl    onEnd;
        outputFileFormat tsv;
    }
    SR_in
    {
        functionObjectLibs ( "libreport.so" );
        logToFile       yes;
        weighting       area;
        fluxName        phi;
        fields          ( T U p ptot );
        surfaces        ( { type patch ; name WATER_CIRCUIT_Inlet ; } );
        constraints     ( { type boundBox ; min ( -1000 -1000 -1000 ) ; max ( 1000 1000 1000 ) ; keepInside true ; } );
        executeControl  onEnd;
        type            surfaceReport;
        regions         ( region0 );
        homogeneity     false;
        backFlowReport  false;
        directionAware  true;
        writeControl    onEnd;
        outputFileFormat tsv;
    }
    SR_out
    {
        functionObjectLibs ( "libreport.so" );
        logToFile       yes;
        weighting       area;
        fluxName        phi;
        fields          ( T U p ptot );
        surfaces        ( { type patch ; name WATER_CIRCUIT_Outlet ; } );
        constraints     ( { type boundBox ; min ( -1000 -1000 -1000 ) ; max ( 1000 1000 1000 ) ; keepInside true ; } );
        executeControl  onEnd;
        type            surfaceReport;
        regions         ( region0 );
        homogeneity     false;
        backFlowReport  false;
        directionAware  true;
        writeControl    onEnd;
        outputFileFormat tsv;
    }
}


// ************************************************************************* //
