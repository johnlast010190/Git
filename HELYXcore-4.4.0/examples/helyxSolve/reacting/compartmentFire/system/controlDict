/*--------------------------------*- C++ -*----------------------------------*\
|       o        |                                                            |
|    o     o     |  HELYX (R) : Open-source CFD for Enterprise                |
|   o   O   o    |  Version : 4.4.0                                           |
|    o     o     |  ENGYS Ltd. <http://engys.com/>                            |
|       o        |                                                            |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     helyxSolve;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         350;

deltaT          0.001;

writeControl    adjustableRunTime;

writeInterval   20;

purgeWrite      0;

writeFormat     binary;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

graphFormat     raw;

runTimeModifiable yes;

adjustTimeStep  yes;

maxCo           2;

maxDeltaT       0.01;

libs            1 ( "" );

maxDi           0.25;

functions
{
    patchInlet_phi
    {
        type            surfaceFieldValue;
        libs            ( "libfieldFunctionObjects.so" );
        writeControl    timeStep;
        writeInterval   200;
        log             true;
        writeFields     no;
        regionType      patch;
        name            inlet;
        operation       sum;
        fields          ( phi );
        region          region0;
    }
    wallPanel_qin
    {
        type            patchProbes;
        libs            ( "libsampling.so" );
        writeControl    timeStep;
        writeInterval   200;
        log             true;
        patch           region0_to_panelRegion_wallPanel;
        probeLocations  ( ( 0.15 0 0.01 ) ( 0.2 0.2 0.01 ) ( 0 0.4 0.01 ) );
        fields          ( qin );
        region          region0;
    }
    inletqr_qin
    {
        type            patchProbes;
        libs            ( "libsampling.so" );
        writeControl    timeStep;
        writeInterval   200;
        log             true;
        patch           inlet;
        probeLocations  ( ( 0 0 0 ) ( 0.02 0 0.02 ) ( 0.02 0 -0.02 ) ( -0.02 0 0.02 ) ( -0.02 0 -0.02 ) );
        fields          ( Qr qin );
        region          region0;
    }
    thermoCouple
    {
        type            thermoCoupleProbes;
        libs            ( "libutilityFunctionObjects.so" );
        writeControl    timeStep;
        writeInterval   100;
        solver          Euler;
        absTol          0.0001;
        relTol          0.1;
        interpolationScheme cell;
        rho             8908;
        Cp              440;
        d               0.001;
        epsilon         0.9;
        radiationField  G;
        probeLocations  ( ( -0.18 0.02 0 ) ( -0.18 0.1 0 ) ( -0.18 0.3 0 ) ( -0.18 0.38 0 ) ( 0 0.38 0 ) ( 0 0.26 0 ) ( 0.01 0.14 0 ) ( -0.2 0.015 0 ) ( -0.2 0.0385 0 ) ( 0.18 0.02 0 ) ( 0.18 0.14 0 ) ( 0.18 0.26 0 ) ( 0.18 0.38 0 ) );
        fields          ( T );
        region          region0;
    }
    probes_O2
    {
        functionObjectLibs ( "libsampling.so" );
        enabled         true;
        probeLocations  ( ( -0.1 0.02 0 ) ( -0.1 0.38 0 ) );
        fields          ( O2 );
        executeControl  timeStep;
        type            probes;
        libs            ( "libsampling.so" );
        writeControl    timeStep;
        writeInterval   200;
        region          region0;
    }
    VR
    {
        functionObjectLibs ( "libreport.so" );
        logToFile       yes;
        fields          ( T U p );
        executeControl  onEnd;
        type            volumeReport;
        regions         ( region0 );
        writeControl    onEnd;
    }
    fieldBlending
    {
        functionObjectLibs ( "libfieldFunctionObjects.so" );
        executeControl  timeStep;
        writeControl    writeTime;
        type            fieldBlendingFactor;
        blendingSources 
        (
            zonalDES
            {
                type            zonalDES;
                CDES            1;
                minValue        0;
                maxValue        1;
                minCoeff        0;
                maxCoeff        1;
                functionType    cubic;
                write           false;
            }

        )
;
        fieldBlending   
        (
            U
            {
                stabilise       10;
                blendingSources 
                (
                    cfl1
                    {
                        type            cfl;
                        minValue        2;
                        maxValue        4;
                        minCoeff        1;
                        maxCoeff        0;
                        functionType    cubic;
                        phi             phi;
                        rho             rho;
                        write           false;
                    }

                )
;
            }

        )
;
        regions         1 ( region0 );
    }
}


// ************************************************************************* //
