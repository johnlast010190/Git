/*--------------------------------*- C++ -*----------------------------------*\
|       o        |                                                            |
|    o     o     |  HELYX (R) : Open-source CFD for Enterprise                |
|   o   O   o    |  Version : 4.4.0                                           |
|    o     o     |  ENGYS Ltd. <http://engys.com/>                            |
|       o        |                                                            |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      caseSetupDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

global
{
    modificationSwitches
    {
        resetInternalFields yes;
        resetBoundaryFields yes;
        resetSystemDicts yes;
        resetConstDicts yes;
        resetBoundaryMesh yes;
        deleteUnusedFields yes;
    }

    regionGroups    1 ( fluid 1 ( region0 ) );

    system
    {
        controlDict
        {
            application     helyxSolve;
            startFrom       latestTime;
            deltaT          1;
            stopAt          endTime;
            endTime         5000;
            writeControl    timeStep;
            writeInterval   100;
        }
    }

    functions
    {
        VR
        {
            type volumeReport;
            regions ( region0 );
            fields ( T U p );
            executeControl   onEnd;
            writeControl     onEnd;
        }
    }
}

regions
{
    region0
    {
        materials (O2 CH4 CO2 H2O N2);

        materialProperties
        {
            materialType    fluid;
            mixture         standardMixture;
            inertSpecie     N2;
            energy          sensibleEnthalpy;

            #include "compressibleGasGRI"

            referenceFields
            {
                p [ 1 -1 -2 0 0 0 0 ] 0;
            }
        }
        state ( transient ras energy radiation reacting );

        // Needed for P1 radiationModel
        fieldMaps { G Intensity; }

       turbulenceModel laminar;

        system
        {
            fvSchemes
            {
                ddtSchemes
                {
                    default         localEuler;
                }

                gradSchemes
                {
                    default         Gauss linear;
                    turbulence      Gauss linear;
                    grad(k)         Gauss linear;
                    grad(epsilon)   Gauss linear;
                    gradU           Gauss linear;
                    grad(h)         Gauss linear;
                    grad(e)         Gauss linear;
                    grad(K)         Gauss linear;
                    grad(T)         Gauss linear;
                }

                divSchemes
                {
                    default         none;
                    div(phi,k)      Gauss limitedLinear 1;
                    div(phi,epsilon) Gauss limitedLinear 1;
                    div(phi,U)      Gauss limitedLinearV 1;
                    div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;
                    div(phi,Yi)     Gauss limitedLinear01 1;
                    div(phi,Yi_h)   Gauss limitedLinear01 1;
                    div(Ji,hi)      Gauss limitedLinear 1;
                    div(phi,h)      Gauss limitedLinear01 1;
                    div(phi,K)      Gauss limitedLinear 1;
                }

                laplacianSchemes
                {
                    default         Gauss linear orthogonal;
                    laplacian((rho*DkEff),k) Gauss linear orthogonal;
                    laplacian((rho*DepsilonEff),epsilon) Gauss linear orthogonal;
                    laplacian((rho*nuEff),U) Gauss linear orthogonal;
                    laplacian(rhorAUf,p) Gauss linear orthogonal;
                    laplacian(rhoD_Yi,Yi) Gauss linear orthogonal;
                    laplacian(kappa,T) Gauss linear orthogonal;
                }

                interpolationSchemes
                {
                    default         linear;
                }

                snGradSchemes
                {
                    default         orthogonal;
                }
            }
            fvSolution
            {
                solvers
                {
                    G
                    {
                        solver          PCG;
                        preconditioner  DIC;
                        tolerance       1e-5;
                        relTol          0.1;
                    }
                    GFinal
                    {
                        $G;
                        relTol          0;
                    }
                }
                relaxationFactors
                {
                    fields { p 1; }
                    equations { U 1; Yi 1; h 1; }
                }
                PIMPLE
                {
                    momentumPredictor   yes;
                    nOuterCorrectors    1;
                    nCorrectors         2;
                    nNonOrthogonalCorrectors 0;
                    maxDeltaT           2e-4;
                    maxCo               0.25;
                    alphaTemp           0.05;
                    alphaY              0.05;
                    Yref
                    {
                        O2                  0.1;
                        CH4                 0.1;
                    }
                    rDeltaTSmoothingCoeff   0.025;
                    rDeltaTDampingCoeff     0.7;
                }
            }

            fvOptions
            {
                ignition
                {
                    type fixedTemperatureConstraint;
                    timeStart 100;
                    duration  10;
                    selectionMode cellZone;
                    cellZone ignition;
                    mode uniform;
                    temperature 2000;
                }
            }


        }

        constant
        {
            radiationProperties
            {
                radiation       off;
                radiationModel  P1;
                solverFreq 1;
                absorptionEmissionModel greyMeanCombustion;
                speciesSettings
                {
                    Tcommon         200;   //Common Temp
                    Tlow            200;   //Low Temp
                    Thigh           2500;  //High Temp
                    invTemp         true;
                    loTcoeffs       ( 0 0 0 0 0 0 ); // coeffs for T < Tcommon
                    hiTcoeffs       ( 0.1 0 0 0 0 0 );
                }
                greyMeanCombustionCoeffs
                {
                    lookUpTableFileName      none;
                    EhrrCoeff                0.0;
                    CO2
                    {
                        $speciesSettings;
                        // a0 +a1*T +a2*T^(+/-)2 + a3*T^(+/-)3 + a4*T^(+/-)4 + a5*T^(+/-)5
                        hiTcoeffs ( 18.741 -121.31e3 273.5e6 -194.05e9 56.31e12 -5.8169e15 );
                    }
                    H2O
                    {
                        $speciesSettings;
                        hiTcoeffs ( -0.23093 -1.12390e3 9.4153e6 -2.99885e9 0.51382e12 -1.868e10 );
                    }
                    CH4
                    {
                        $speciesSettings;
                        invTemp false;
                        hiTcoeffs ( 6.6334 -0.0035686 1.6682e-8 2.5611e-10 -2.6558e-14 0 );
                    }
                    O2 { $speciesSettings; }
                    N2 { $speciesSettings; }
                }
                scatterModel    none;
                sootModel       none;
                transmissivityModel none;
            }

            boundaryRadiationProperties
            {
                ".*"
                {
                    mode            lookup;
                    emissivity      1;
                    absorptivity    0;
                }
            }

            combustionProperties { combustionModel laminar; }

            chemistryProperties
            {

                chemistryType { solver EulerImplicit; }
                chemistry on;
                initialChemicalTimeStep 1e-07;
                EulerImplicitCoeffs { cTauChem 1; }
                odeCoeffs { solver Rosenbrock43; absTol 1e-08; relTol 0.01; }

                reactions
                {
                    oneStepReaction
                    {
                        type            irreversibleArrheniusReaction;
                        reaction        "CH4^0.7 + 2O2^0.8 = CO2 + 2H2O^1.0";
                        A               9.48683e+11;
                        beta            0.0;
                        Ta              23650;
                    }
                }
            }

            g
            {
                value           (-9.81 0 0);
            }
        }

        boundaryMesh
        {
            inletCH4 { type inlet; }
            wallTube { type wall; }
            outlet { type outlet; }
            symmetry {type symmetry; }
            frontAndBack_pos { type empty; }
            frontAndBack_neg { type empty; }
        }

        fields
        {
            U { initialisation{type fixedValue; value uniform (1.0 0 0);} }
            T { initialisation{type fixedValue; value uniform 300;} }
            G { initialisation{type fixedValue; value uniform 0;} }
            p { initialisation{type fixedValue; value uniform 1e5;} }
            OH { initialisation{type fixedValue; value uniform 0;} }
            O { initialisation{type fixedValue; value uniform 0;} }
            H2O { initialisation{type fixedValue; value uniform 0;} }
            H2 { initialisation{type fixedValue; value uniform 0;} }
            H { initialisation{type fixedValue; value uniform 0;} }
            CO { initialisation{type fixedValue; value uniform 0;} }
            CO2 { initialisation{type fixedValue; value uniform 0;} }
            CH4
            {
                initialisation
                {
                    type cellSet;
                    defaultValue uniform 0.057;
                    setSources
                    (
                        boxToCell
                        {
                            box (-1 -10 -100) (0.0036 10 0);
                            value 0.057;
                        }
                    );
                }
            }
            O2
            {
                initialisation
                {
                    type cellSet;
                    defaultValue uniform 0.23;
                    setSources
                    (
                        boxToCell
                        {
                            box (-1 -10 -100) (0.0036 10 0);
                            value 0.23;
                        }
                    );
                }
            }
            N2
            {
                initialisation
                {
                    type cellSet;
                    defaultValue uniform 0.713;
                    setSources
                    (
                        boxToCell
                        {
                            box (-1 -10 -100) (0.0036 10 0);
                            value 0.713;
                        }
                    );
                }
            }
        }

        boundaryTypeDefaults
        {
            wall
            {
                T { type zeroGradient; }
                G { type MarshakRadiation; T T; value uniform 0; }
            }
            inlet
            {
                G { type MarshakRadiation; T T; value uniform 0; }
            }
            outlet
            {
                G { type MarshakRadiation; T T; value uniform 0; }
            }
        }

        boundaryConditions
        {
            inletCH4
            {
                U
                {
                    type            fixedValue;
                    value           uniform (1.6 0 0);
                }
                T
                {
                    type            fixedValue;
                    value           uniform 300;
                }
                CH4
                {
                    type            fixedValue;
                    value           uniform 0.057;
                }
                N2
                {
                    type            fixedValue;
                    value           uniform 0.713;
                }
                O2
                {
                    type            fixedValue;
                    value           uniform 0.23;
                }
            }

            outlet
            {
                U
                {
                    type            pressureInletOutletVelocity;
                    value           uniform (1.6 0 0);
                }
                p
                {
                    type            totalPressure;
                    value           uniform 1e5;
                    p0              uniform 1e5;
                    gamma           1.4;
                    addStaticHead   false;
                }
                N2
                {
                    type            inletOutlet;
                    inletValue      uniform 0.713;
                    value           uniform 0.713;
                }
                O2
                {
                    type            inletOutlet;
                    inletValue      uniform 0.23;
                    value           uniform 0.23;
                }
            }
            wallTube
            {
                T
                {
                    type            fixedValue;
                    value           uniform 300;
                }
            }
        }
    }
}


// ************************************************************************* //
