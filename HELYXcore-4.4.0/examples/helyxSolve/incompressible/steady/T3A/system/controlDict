/*--------------------------------*- C++ -*----------------------------------*\
|       o        |                                                            |
|    o     o     |  HELYX (R) : Open-source CFD for Enterprise                |
|   o   O   o    |  Version : 4.4.0                                           |
|    o     o     |  ENGYS Ltd. <http://engys.com/>                            |
|       o        |                                                            |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     helyxSolve;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         1000;

deltaT          1;

writeControl    timeStep;

writeInterval   500;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

graphFormat     raw;

runTimeModifiable yes;

libs            1 ( "" );

adjustTimeStep  false;

functions
{
    wallShearStress
    {
        type            wallShearStress;
        libs            ( "libfieldFunctionObjects.so" );
        executeControl  writeTime;
        writeControl    writeTime;
    }
    wallShearStressGraph
    {
        start           ( 0.04075 0.00075 0 );
        end             ( 3.04 0.00075 0 );
        fields          ( wallShearStress );
        interpolationScheme cellPoint;
        setFormat       raw;
        setConfig
        {
            type            uniform;
            axis            x;
            nPoints         100;
        }
        type            sets;
        libs            ( "libsampling.so" );
        writeControl    writeTime;
        sets            
        (
            line
            {
                type            uniform;
                axis            x;
                nPoints         100;
                start           ( 0.04075 0.00075 0 );
                end             ( 3.04 0.00075 0 );
            }

        )
;
    }
    kGraph
    {
        start           ( 0.04075 0.05 0 );
        end             ( 3.04 0.05 0 );
        fields          ( k );
        interpolationScheme cellPoint;
        setFormat       raw;
        setConfig
        {
            type            uniform;
            axis            x;
            nPoints         100;
        }
        type            sets;
        libs            ( "libsampling.so" );
        writeControl    writeTime;
        sets            
        (
            line
            {
                type            uniform;
                axis            x;
                nPoints         100;
                start           ( 0.04075 0.05 0 );
                end             ( 3.04 0.05 0 );
            }

        )
;
    }
}


// ************************************************************************* //
