/*--------------------------------*- C++ -*----------------------------------*\
|       o        |                                                            |
|    o     o     |  HELYX (R) : Open-source CFD for Enterprise                |
|   o   O   o    |  Version : 4.4.0                                           |
|    o     o     |  ENGYS Ltd. <http://engys.com/>                            |
|       o        |                                                            |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     helyxSolve;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         5000;

deltaT          constant 1;

writeControl    timeStep;

writeInterval   1000;

purgeWrite      2;

writeFormat     ascii;

writePrecision  10;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

graphFormat     raw;

runTimeModifiable yes;

libs            2 ( "" "" );

writeEndTime    true;

adjustTimeStep  false;

maxCo           0;

maxAlphaCo      0;

minDeltaT       0;

maxDeltaT       0;

functions
{
    SE
    {
        type            sets;
        regions         ( region0 );
        fields          ( U k nut epsilon );
        interpolationScheme cellPoint;
        setFormat       tsv;
        sets            
        (
            sets0
            {
                type            uniform;
                axis            distance;
                start           ( 2500 50 0 );
                end             ( 2500 50 500 );
                nPoints         100;
            }

            sets1
            {
                type            uniform;
                axis            distance;
                start           ( 4000 50 0 );
                end             ( 4000 50 500 );
                nPoints         100;
            }

        )
;
        writeControl    outputTimeAndEnd;
        writeInterval   1;
        executeControl  outputTimeAndEnd;
        executeInterval 1;
        functionObjectLibs ( "libsampling.so" );
    }
}


// ************************************************************************* //
