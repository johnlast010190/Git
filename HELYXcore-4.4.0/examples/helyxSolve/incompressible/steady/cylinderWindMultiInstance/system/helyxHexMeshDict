/*--------------------------------*- C++ -*----------------------------------*\
|       o        |                                                            |
|    o     o     |  HELYX (R) : Open-source CFD for Enterprise                |
|   o   O   o    |  Version : 4.4.0                                           |
|    o     o     |  ENGYS Ltd. <http://engys.com/>                            |
|       o        |                                                            |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      helyxHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

castellatedMesh true;
snap            true;
addLayers       true;
dualMesh        true;
blockType       block;
autoBlockMesh   false;
blockData       ( 1 0 );
crackDetection  false;
crackTol        0.05;
allowTopoChanges true;
finalDecomposition ptscotch;

geometry
{
    cylinder
    {
        type            searchableCylinder;
        point1          ( 0 0 -1 );
        point2          ( 0 0 51 );
        radius          50;
    }
    main
    {
        type            searchableBox;
        min             ( -6 -4 -1 );
        max             ( 6 4 8 );
    }
    annex
    {
        type            searchableBox;
        min             ( 2 4 -1 );
        max             ( 10 8 5 );
    }
}

castellatedMeshControls
{
    features ();
    refinementSurfaces
    {
        cylinder
        {
            level ( 0 0 );
        }
        main
        {
            level ( 2 2 );
        }
        annex
        {
            level ( 2 2 );
        }
    }
    refinementRegions {}
    maxLocalCells   250000000;
    maxGlobalCells  250000000;
    minRefinementCells 100;
    maxLoadUnbalance 0.1;
    nCellsBetweenLevels 2;
    resolveFeatureAngle -1;
    featureRefineAngle 20;
    refineSurfaceBoundary false;
    minBaffleAngle  -60;
    allowFreeStandingZoneFaces false;
    balanceThenRefine true;
    nGapRefinements 0;
    minZoneRegionSize 1;
    additionalInsideCheck false;
    wrapper
    {
        wrap            false;
        volSources      true;
        volDistance     1;
        meshInMM        false;
        maxIter         200;
        writeFields     false;
        invert          false;
        sigma           3;
        cutoff          1000;
    }
    locationsInMesh
    (
        (( -10.027305465712613 3.411703970620211 13.605309983201387) none)
    );
}

snapControls
{
    featureEdges {}
    nOuterIter      1;
    nPreFeatureIter 0;
    nSolveIter      10;
    nFeatureIter    60;
    globalFeatureEdges true;
    globalRegionSnap false;
    nSmoothPatch    2;
    tolerance       4;
    nRelaxIter      5;
    zoneFeatureSnapping true;
    directFeatureSnapping true;
    geometryFeatureLines true;
    collapseTol     0.25;
    enlargeStencil  true;
    smoothSnappedSurface true;
    featureSnapChecks true;
    concaveTol      0.3;
    nSliverSmooths  10;
    mergeBoundaryFaces true;
}

addLayersControls
{
    layers
    {
        ffminz
        {
            nSurfaceLayers  5;
            fch             0.1;
            grownUp         automatic;
        }
        ffmaxz
        {
            nSurfaceLayers  -1;
            finalLayerThickness 0.4;
            expansionRatio  1.25;
            grownUp         automatic;
        }
        cylinder
        {
            nSurfaceLayers  -1;
            reSnap          true;
            finalLayerThickness 0.4;
            expansionRatio  1.25;
            grownUp         automatic;
        }
        main
        {
            nSurfaceLayers  3;
            fch             0.1;
            grownUp         automatic;
        }
        annex
        {
            nSurfaceLayers  3;
            fch             0.1;
            grownUp         automatic;
        }
    }
    relativeSizes   true;
    expansionRatio  1.25;
    finalLayerThickness 0.4;
    minThickness    0.2;
    featureAngleMerge 45;
    featureAngleTerminate 80;
    nRelaxIter      5;
    maxFaceThicknessRatio 2;
    maxThicknessToMedialRatio 0.3;
    minMedialAxisAngle 90;
    maxLayerIter    30;
    growConvexEdge  true;
    growConcaveEdge true;
    growUpPatches   true;
    rebalance       false;
    layerRecovery   1;
    nSmoothThickness 10;
    nSmoothSurfaceNormals 6;
    nSmoothNormals  3;
    writeVTK        true;
    maxProjectionDistance 10000;
    maxCellDistortion 50;
    medialRatioExp  1;
    growZoneLayers  false;
}

meshQualityControls
{
    maxNonOrtho     70;
    maxBoundarySkewness 20;
    maxInternalSkewness 6;
    maxConcave      80;
    minFlatness     0.5;
    minVol          1e-14;
    minTetQuality   -1e+30;
    minArea         1e-13;
    minTwist        0.05;
    minDeterminant  0.0001;
    minFaceWeight   0.08;
    minVolRatio     0.02;
    minTriangleTwist -0.99;
    errorReduction  0.75;
    nSmoothScale    10;
    minVolCollapseRatio -1;
    faceFaceCells   false;
    minSnapRelativeVolume -1;
    smoothAlignedEdges false;
    minSnapRelativeTetVolume -1;
    maxGaussGreenCentroid -1;
    nVolSmoothIter  8;
    maxCellAspectRatio -1;
    maxFaceCentreNonOrtho 180;
}

debug           0;

mergeTolerance  1e-06;


// ************************************************************************* //
