/*--------------------------------*- C++ -*----------------------------------*\
|       o        |                                                            |
|    o     o     |  HELYX (R) : Open-source CFD for Enterprise                |
|   o   O   o    |  Version : 4.4.0                                           |
|    o     o     |  ENGYS Ltd. <http://engys.com/>                            |
|       o        |                                                            |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     helyxSolve;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         1000;

deltaT          constant 1;

writeControl    timeStep;

writeInterval   500;

purgeWrite      1;

writeFormat     ascii;

writePrecision  10;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

graphFormat     raw;

runTimeModifiable yes;

libs            1 ( "" );

adjustTimeStep  false;

maxCo           0;

maxAlphaCo      0;

maxDeltaT       0;

functions
{
    VR
    {
        functionObjectLibs ( "libreport.so" );
        logToFile       yes;
        fields          ( U epsilon k p );
        executeControl  onEnd;
        type            volumeReport;
        writeControl    onEnd;
        outputFileFormat tsv;
    }
    verticalProfiles
    {
        h               7.5;
        z1              0;
        z2              500;
        y               0.5;
        mast1_dist      -45.75;
        mast2_dist      0;
        mast3_dist      27;
        mast4_dist      108.75;
        setConfig
        {
            type            uniform;
            axis            distance;
            nPoints         2000;
        }
        fields          ( U p k epsilon );
        interpolationScheme cellPoint;
        setFormat       raw;
        type            sets;
        libs            ( "libsampling.so" );
        writeControl    writeTime;
        sets            
        (
            inlet_profile
            {
                type            uniform;
                axis            distance;
                nPoints         2000;
                start           ( 5 0.5 0 );
                end             ( 5 0.5 500 );
            }

            mast1
            {
                type            uniform;
                axis            distance;
                nPoints         2000;
                start           ( -45.75 0.5 0 );
                end             ( -45.75 0.5 500 );
            }

            mast2
            {
                type            uniform;
                axis            distance;
                nPoints         2000;
                start           ( 0 0.5 0 );
                end             ( 0 0.5 500 );
            }

            mast3
            {
                type            uniform;
                axis            distance;
                nPoints         2000;
                start           ( 27 0.5 0 );
                end             ( 27 0.5 500 );
            }

            mast4
            {
                type            uniform;
                axis            distance;
                nPoints         2000;
                start           ( 108.75 0.5 0 );
                end             ( 108.75 0.5 500 );
            }

        )
;
    }
}


// ************************************************************************* //
