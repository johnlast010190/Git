/*--------------------------------*- C++ -*----------------------------------*\
|       o        |                                                            |
|    o     o     |  HELYX (R) : Open-source CFD for Enterprise                |
|   o   O   o    |  Version : 4.4.0                                           |
|    o     o     |  ENGYS Ltd. <http://engys.com/>                            |
|       o        |                                                            |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      binary;
    class       dictionary;
    arch        "LSB;label=32;scalar=64";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     helyxSolve;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         0.002;

deltaT          constant 1e-05;

writeControl    timeStep;

writeInterval   100;

purgeWrite      200;

writeFormat     binary;

writePrecision  8;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

graphFormat     raw;

runTimeModifiable true;

libs            1 ( "" );

adjustTimeStep  false;

maxCo           0;

maxDeltaT       0;

maxAlphaCo      0;

functions
{
    FR
    {
        functionObjectLibs ( "libforces.so" );
        directForceDensity false;
        p               p;
        U               U;
        rhoName         rhoInf;
        rhoInf          1.205;
        pRef            0;
        CofR            ( 0.2 0.15 -0.01 );
        patches         ( cylinder );
        executeControl  onEnd;
        type            forces;
        regions         ( region0 );
        writeControl    onEnd;
    }
    VR
    {
        functionObjectLibs ( "libreport.so" );
        logToFile       true;
        fields          ( U p );
        executeControl  onEnd;
        writeControl    onEnd;
        type            volumeReport;
        outputFileFormat tsv;
    }
    FMM0
    {
        type            fieldMinMax;
        libs            ( "libfieldFunctionObjects.so" );
        location        true;
        mode            magnitude;
        executeControl  onEnd;
        writeControl    onEnd;
        fields          ( U );
    }
    FMM1
    {
        type            fieldMinMax;
        libs            ( "libfieldFunctionObjects.so" );
        location        true;
        mode            magnitude;
        executeControl  onEnd;
        writeControl    onEnd;
        fields          ( p );
    }
    fieldBlending
    {
        functionObjectLibs ( "libfieldFunctionObjects.so" );
        executeControl  timeStep;
        writeControl    writeTime;
        type            fieldBlendingFactor;
        blendingSources 
        (
            zonalDES
            {
                type            zonalDES;
                CDES            1;
                minValue        0;
                maxValue        1;
                minCoeff        0;
                maxCoeff        1;
                functionType    cubic;
                write           false;
            }

        )
;
        fieldBlending   
        (
            U
            {
                stabilise       10;
                blendingSources 
                (
                    cfl1
                    {
                        type            cfl;
                        minValue        2;
                        maxValue        4;
                        minCoeff        1;
                        maxCoeff        0;
                        functionType    cubic;
                        phi             phi;
                        rho             rho;
                        write           false;
                    }

                )
;
            }

        )
;
        regions         1 ( region0 );
    }
}


// ************************************************************************* //
