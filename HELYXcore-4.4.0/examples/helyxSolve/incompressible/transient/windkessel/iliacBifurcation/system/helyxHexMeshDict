/*--------------------------------*- C++ -*----------------------------------*\
|       o        |                                                            |
|    o     o     |  HELYX (R) : Open-source CFD for Enterprise                |
|   o   O   o    |  Version : 4.4.0                                           |
|    o     o     |  ENGYS Ltd. <http://engys.com/>                            |
|       o        |                                                            |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      helyxHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

castellatedMesh true;
snap true;
addLayers true;
autoBlockMesh true;
blockData ( 0.004 0 );
crackDetection false;
crackTol 0.05;
finalDecomposition ptscotch;

geometry
{
    aorta.stl
    {
        type triSurfaceMesh;
        name aorta;
        appendRegionName false;
    }
    leftIliac.stl
    {
        type triSurfaceMesh;
        name leftIliac;
        appendRegionName false;
    }
    rightIliac.stl
    {
        type triSurfaceMesh;
        name rightIliac;
        appendRegionName false;
    }
    wall.stl
    {
        type triSurfaceMesh;
        name walls;
        appendRegionName false;
    }
    sphere
    {
        type searchableSphere;
        centre ( -0.02 -0.01 -0.065 );
        radius 0.015;
    }
}

castellatedMeshControls
{
    features
    ();

    refinementSurfaces
    {
        aorta
        {
            level ( 0 0 );
            proximityIncrement 0;
            maxCellsAcrossGap 2;
            featureAngle 20.0;
        }
        leftIliac
        {
            level ( 0 0 );
            proximityIncrement 0;
            maxCellsAcrossGap 2;
            featureAngle 20.0;
        }
        rightIliac
        {
            level ( 0 0 );
            proximityIncrement 0;
            maxCellsAcrossGap 2;
            featureAngle 20.0;
        }
        walls
        {
            level ( 2 2 );
            proximityIncrement 0;
            maxCellsAcrossGap 2;
            featureAngle 20.0;
        }
    }

    refinementRegions
    {
        sphere
        {
            mode inside;
            levels ( (100000.0 3) );
        }
    }

    maxLocalCells 250000000;
    maxGlobalCells 250000000;
    minRefinementCells 100;
    maxLoadUnbalance 0.1;
    nCellsBetweenLevels 3;
    resolveFeatureAngle -1.0;
    featureRefineAngle 20.0;
    refineSurfaceBoundary false;
    minBaffleAngle -60.0;
    allowFreeStandingZoneFaces false;
    balanceThenRefine true;
    nGapRefinements 0;
    minZoneRegionSize 1;
    additionalInsideCheck false;

    wrapper
    {
        wrap false;
        volSources true;
        volDistance 1.0;
        meshInMM false;
        maxIter 200;
        writeFields false;
        invert false;
        sigma 3.0;
        cutoff 1000.0;
    }

    locationsInMesh
    (
        (
            (-1.3121205041234592E-4 -8.462422579786532E-4 -6.892779903676687E-5)
            none
        )
    );
}

snapControls
{
    featureEdges
    {}

    nOuterIter 1;
    nPreFeatureIter 0;
    nSolveIter 10;
    nFeatureIter 60;
    globalFeatureEdges true;
    globalRegionSnap false;
    nSmoothPatch 2;
    tolerance 4.0;
    nRelaxIter 5;
    zoneFeatureSnapping true;
    directFeatureSnapping true;
    geometryFeatureLines true;
    snapSurfBoundary true;
    collapseTol 0.25;
    enlargeStencil true;
    smoothSnappedSurface true;
    featureSnapChecks true;
    concaveTol 0.3;
}

addLayersControls
{
    layers
    {
        aorta
        {
            nSurfaceLayers 0;
            finalLayerThickness 0.4;
            expansionRatio 1.25;
            grownUp automatic;
        }
        leftIliac
        {
            nSurfaceLayers 0;
            finalLayerThickness 0.4;
            expansionRatio 1.25;
            grownUp automatic;
        }
        rightIliac
        {
            nSurfaceLayers 0;
            finalLayerThickness 0.4;
            expansionRatio 1.25;
            grownUp automatic;
        }
        walls
        {
            nSurfaceLayers 5;
            finalLayerThickness 0.5;
            expansionRatio 1.25;
            grownUp automatic;
        }
    }

    relativeSizes true;
    expansionRatio 1.25;
    finalLayerThickness 0.4;
    minThickness 0.2;
    featureAngleMerge 45;
    featureAngleTerminate 80.0;
    nRelaxIter 5;
    maxFaceThicknessRatio 2.0;
    maxThicknessToMedialRatio 0.3;
    minMedialAxisAngle 90;
    maxLayerIter 30;
    growConvexEdge true;
    growConcaveEdge true;
    growUpPatches true;
    preBalance false;
    layerRecovery 1;
    nSmoothThickness 10;
    nSmoothSurfaceNormals 6;
    nSmoothNormals 3;
    writeVTK true;
}

meshQualityControls
{
    maxNonOrtho 70.0;
    maxBoundarySkewness 20;
    maxInternalSkewness 6;
    maxConcave 80.0;
    minFlatness 0.5;
    minVol 1.0E-14;
    minTetQuality -1.0E30;
    minArea 1.0E-13;
    minTwist 0.05;
    minDeterminant 1.0E-4;
    minFaceWeight 0.08;
    minVolRatio 0.02;
    minTriangleTwist -0.99;
    errorReduction 0.75;
    nSmoothScale 10;
    minVolCollapseRatio -1.0;
    faceFaceCells false;
    minSnapRelativeVolume -1;
    smoothAlignedEdges false;
    minSnapRelativeTetVolume -1;
    maxGaussGreenCentroid -1;
    nVolSmoothIter 8;
    maxCellAspectRatio -1.0;
    maxFaceCentreNonOrtho 180.0;
}

debug 0;

mergeTolerance 1.0E-6;

repatchRegions
{}


// ************************************************************************* //
