/*--------------------------------*- C++ -*----------------------------------*\
|       o        |                                                            |
|    o     o     |  HELYX (R) : Open-source CFD for Enterprise                |
|   o   O   o    |  Version : 4.4.0                                           |
|    o     o     |  ENGYS Ltd. <http://engys.com/>                            |
|       o        |                                                            |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     helyxSolve;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         25;

deltaT          0.005;

writeControl    runTime;

writeInterval   1;

purgeWrite      0;

writeFormat     ascii;

writePrecision  8;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

graphFormat     raw;

runTimeModifiable yes;

libs            1 ( "" );

adjustTimeStep  no;

maxCo           1;

maxDeltaT       1;

functions
{
    residuals
    {
        type            residuals;
        libs            ( "libutilityFunctionObjects.so" );
        writeControl    timeStep;
        writeInterval   1;
        fields          ( p sigma );
    }
    singleGraph
    {
        interpolationScheme cellPoint;
        setFormat       raw;
        setConfig
        {
            type            midPoint;
            axis            distance;
            nPoints         100;
        }
        type            sets;
        libs            ( "libsampling.so" );
        writeControl    writeTime;
        sets            
        (
            line
            {
                type            midPoint;
                axis            distance;
                nPoints         100;
                start           ( 0 0 0 );
                end             ( 0 1 0 );
            }

        )
;
        fields          ( U );
    }
    probes
    {
        functionObjectLibs ( "libsampling.so" );
        enabled         true;
        probeLocations  ( ( 0 1 0 ) );
        fields          ( U );
        executeControl  timeStep;
        type            probes;
        libs            ( "libsampling.so" );
        writeControl    timeStep;
        writeInterval   1;
    }
    VR
    {
        functionObjectLibs ( "libreport.so" );
        logToFile       yes;
        fields          ( U p sigma );
        executeControl  onEnd;
        type            volumeReport;
        writeControl    onEnd;
        outputFileFormat tsv;
    }
}


// ************************************************************************* //
