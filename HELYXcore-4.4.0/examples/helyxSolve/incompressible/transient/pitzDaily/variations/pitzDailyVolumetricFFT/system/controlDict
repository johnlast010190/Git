/*--------------------------------*- C++ -*----------------------------------*\
|       o        |                                                            |
|    o     o     |  HELYX (R) : Open-source CFD for Enterprise                |
|   o   O   o    |  Version : 4.4.0                                           |
|    o     o     |  ENGYS Ltd. <http://engys.com/>                            |
|       o        |                                                            |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     helyxSolve;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         0.01;

deltaT          1e-05;

writeControl    timeStep;

writeInterval   10;

purgeWrite      0;

writeFormat     ascii;

writePrecision  10;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

graphFormat     raw;

runTimeModifiable yes;

libs            1 ( "" );

adjustTimeStep  no;

maxCo           0.5;

maxDeltaT       1;

functions
{
    fp1
    {
        functionObjectLibs ( "libfieldFunctionObjects.so" );
        operations      ( { operation patchWrite ; fieldName pBound ; inField p ; patches ( lowerWall ) ; } );
        executeControl  timeStep;
        writeControl    writeTime;
        type            fieldProcess;
        calculationControl continuous;
        outputControl   outputTime;
    }
    fieldAverage1
    {
        functionObjectLibs ( "libfieldFunctionObjects.so" );
        fields          
        (
            U
            {
                mean            on;
                prime2Mean      on;
                base            time;
            }

            p
            {
                mean            on;
                prime2Mean      on;
                base            time;
            }

        )
;
        executeControl  timeStep;
        writeControl    writeTime;
        type            fieldAverage;
        libs            ( "libfieldFunctionObjects.so" );
    }
    VR
    {
        functionObjectLibs ( "libreport.so" );
        logToFile       yes;
        fields          ( UMean pMean );
        executeControl  onEnd;
        type            volumeReport;
        writeControl    onEnd;
        outputFileFormat tsv;
    }
    WSS
    {
        type            wallShearStress;
        libs            ( "libfieldFunctionObjects.so" );
        executeControl  onEnd;
        writeControl    onEnd;
    }
    fieldBlending
    {
        functionObjectLibs ( "libfieldFunctionObjects.so" );
        executeControl  timeStep;
        writeControl    writeTime;
        type            fieldBlendingFactor;
        blendingSources 
        (
            zonalDES
            {
                type            zonalDES;
                CDES            1;
                minValue        0;
                maxValue        1;
                minCoeff        0;
                maxCoeff        1;
                functionType    cubic;
                write           false;
            }

        )
;
        fieldBlending   
        (
            U
            {
                stabilise       10;
                blendingSources 
                (
                    cfl1
                    {
                        type            cfl;
                        minValue        2;
                        maxValue        4;
                        minCoeff        1;
                        maxCoeff        0;
                        functionType    cubic;
                        phi             phi;
                        rho             rho;
                        write           false;
                    }

                )
;
            }

        )
;
        regions         1 ( region0 );
    }
}


// ************************************************************************* //
