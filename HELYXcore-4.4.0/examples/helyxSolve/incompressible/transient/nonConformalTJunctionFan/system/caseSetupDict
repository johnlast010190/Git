/*--------------------------------*- C++ -*----------------------------------*\
|       o        |                                                            |
|    o     o     |  HELYX (R) : Open-source CFD for Enterprise                |
|   o   O   o    |  Version : 4.4.0                                           |
|    o     o     |  ENGYS Ltd. <http://engys.com/>                            |
|       o        |                                                            |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      caseSetupDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

global
{
    system
    {
        controlDict
        {
            application helyxSolve;
            startFrom startTime;
            startTime 0;
            stopAt endTime;
            endTime 1.5;
            deltaT 0.001;
            writeControl adjustableRunTime;
            writeInterval 0.1;
            adjustTimeStep yes;
            maxCo 3;
        }
    }
    functions
    {
        VR
        {
            type             volumeReport;
            fields           ( U p );
            executeControl   onEnd;
            writeControl     onEnd;
            outputFileFormat tsv;
        }
        probes
        {
            type            probes;
            libs            ("libsampling.so");
            name            probes;
            writeControl    writeTime;
            writeInterval   1;
            fields          (U p);
            probeLocations
            (
                (1e-06 0 0.01)        // at inlet
                (0.21 -0.20999 0.01)  // at outlet1
                (0.21 0.20999 0.01)   // at outlet2
                (0.21 0 0.01)         // at central block
            );
        }
    }
}

regions
{
    region0
    {
        state (transient ras);
        boundaryMesh
        {
            fan_master
            {
                name     fan0;
                type     nonConformal;
                inGroups (nonCouple);
            }
            fan_slave
            {
                name     fan1;
                type     nonConformal;
                inGroups (nonCouple);
            }
        }
        turbulenceModel kEpsilon;
        materials (air);
        materialProperties
        {
            referenceFields
            {
                p               [ 1 -1 -2 0 0 0 0 ] 0;
            }
        }
        system
        {
            fvSchemes
            {
                ddtSchemes
                {
                    default         Euler;
                }
                gradSchemes
                {
                    default         Gauss linear;
                }
                divSchemes
                {
                    default         none;
                    div(phi,U)      Gauss limitedLinearV 1;
                    div(phi,k)      Gauss limitedLinear 1;
                    div(phi,epsilon) Gauss limitedLinear 1;
                    div(phi,s)      Gauss limitedLinear 1;
                }
                laplacianSchemes
                {
                    default         Gauss linear corrected;
                }
                snGradSchemes
                {
                    default         corrected;
                }
            }
            fvSolution
            {
                solvers
                {
                    p
                    {
                        solver          GAMG;
                        tolerance       1e-06;
                        relTol          0.01;
                        smoother        GaussSeidel;
                    }
                    pFinal
                    {
                        solver          GAMG;
                        tolerance       1e-06;
                        relTol          0;
                        smoother        GaussSeidel;
                    }
                    U       { tolerance       1e-05; }
                    k       { tolerance       1e-05; }
                    epsilon { tolerance       1e-05; }
                    UFinal  { tolerance       1e-05; }
                    kFinal  { tolerance       1e-05; }
                    epsilonFinal  { tolerance       1e-05; }
                }
                PIMPLE
                {
                    nOuterCorrectors 1;
                    nCorrectors      2;
                }
                relaxationFactors
                {
                    equations
                    {
                        U           1;
                        s           1;
                        sFinal      1;
                    }
                }
            }
            nonConformalCouplesDict
            {
                nonConformalCyclic
                {
                    patches          (fan0 fan1);
                    transformType    none;
                }
            }
        }
        fields
        {
            U
            {
                initialisation
                {
                    type fixedValue;
                    value uniform (0 0 0);
                }
            }
            p
            {
                initialisation
                {
                    type fixedValue;
                    value uniform 0;
                }
            }
            k
            {
                initialisation
                {
                    type fixedValue;
                    value uniform 0.375;
                }
            }
            epsilon
            {
                initialisation
                {
                    type fixedValue;
                    value uniform 200;
                }
            }
        }
        boundaryConditions
        {
            inlet
            {
                U
                {
                    type            pressureInletOutletVelocity;
                    value           uniform (0 0 0);
                }
                p
                {
                    type            fanPressure;
                    outOfBounds     clamp;
                    direction       in;
                    // nonDimensional  true;
                    // rpm             300;
                    // dm              2e-2;
                    p0              uniform 30;
                    fanCurve table
                    (
                        (0      20)
                        (0.0023 10)
                        (0.003  5)
                    );
                    value           uniform 0;
                }
                k
                {
                    type            turbulentIntensityKineticEnergyInlet;
                    intensity       0.05;       // 5% turbulent intensity
                    value           uniform 0.375;
                }
                epsilon
                {
                    type            turbulentMixingLengthDissipationRateInlet;
                    mixingLength    0.01;       // 1cm - half channel height
                    value           uniform 200;
                }
            }
            outlet1
            {
                U
                {
                    type            inletOutlet;
                    inletValue      uniform (0 0 0);
                    value           uniform (0 0 0);
                }
                p
                {
                    type            fixedValue;
                    value           uniform 10;
                }
                k
                {
                    type            inletOutlet;
                    inletValue      uniform 0.375;
                    value           uniform 0.375;
                }
                epsilon
                {
                    type            inletOutlet;
                    inletValue      uniform 200;
                    value           uniform 200;
                }
            }
            outlet2
            {
                U
                {
                    type            inletOutlet;
                    inletValue      uniform (0 0 0);
                    value           uniform (0 0 0);
                }
                p
                {
                    type            fixedValue;
                    value           uniform 0;
                }
                k
                {
                    type            inletOutlet;
                    inletValue      uniform 0.375;
                    value           uniform 0.375;
                }
                epsilon
                {
                    type            inletOutlet;
                    inletValue      uniform 200;
                    value           uniform 200;
                }
            }
            defaultFaces
            {
                U
                {
                    type            noSlip;
                }
                p
                {
                    type            zeroGradient;
                }
                k
                {
                    type            kqRWallFunction;
                    value           uniform 0.375;
                }
                epsilon
                {
                    type            epsilonWallFunction;
                    value           uniform 200;
                }
            }
            nonCouple
            {
                U
                {
                    type slip;
                }
            }
            "nonConformalCyclic.*"
            {
                p
                {
                    type        fan;
                    patchType   nonConformalCyclic;
                    jump        uniform 0;
                    value       uniform 0;
                    jumpTable   polynomial 1( (100 0) );
                }
            }
        }
    }
}


// ************************************************************************* //
