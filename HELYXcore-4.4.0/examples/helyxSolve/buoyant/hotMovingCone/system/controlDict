/*--------------------------------*- C++ -*----------------------------------*\
|       o        |                                                            |
|    o     o     |  HELYX (R) : Open-source CFD for Enterprise                |
|   o   O   o    |  Version : 4.4.0                                           |
|    o     o     |  ENGYS Ltd. <http://engys.com/>                            |
|       o        |                                                            |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     helyxSolve;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         0.012;

deltaT          1e-05;

writeControl    timeStep;

writeInterval   100;

purgeWrite      0;

writeFormat     ascii;

writePrecision  10;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

graphFormat     raw;

runTimeModifiable yes;

libs            1 ( "" );

adjustTimeStep  no;

maxCo           0.2;

maxDeltaT       1;

functions
{
    VR
    {
        functionObjectLibs ( "libreport.so" );
        logToFile       yes;
        fields          ( U p T );
        executeControl  timeStep;
        type            volumeReport;
    }
    cuttingPlane
    {
        functionObjectLibs ( "libsampling.so" );
        fields          ( p U T );
        interpolationScheme cellPoint;
        surfaceFormat   vtk;
        surfaces        
        (
            zNormal
            {
                type            cuttingPlane;
                planeType       pointAndNormal;
                pointAndNormalDict
                {
                    basePoint       ( 0 0 0 );
                    normalVector    ( 0 0 1 );
                }
                interpolate     true;
            }

        )
;
        writeControl    outputTime;
        type            surfaces;
    }
}


// ************************************************************************* //
