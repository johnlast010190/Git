/*--------------------------------*- C++ -*----------------------------------*\
|       o        |                                                            |
|    o     o     |  HELYX (R) : Open-source CFD for Enterprise                |
|   o   O   o    |  Version : 4.4.0                                           |
|    o     o     |  ENGYS Ltd. <http://engys.com/>                            |
|       o        |                                                            |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     helyxSolve;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         500;

deltaT          1;

writeControl    timeStep;

writeInterval   100;

purgeWrite      0;

writeFormat     ascii;

writePrecision  10;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

graphFormat     raw;

runTimeModifiable yes;

libs            1 ( "" );

functions
{
    VR
    {
        functionObjectLibs ( "libreport.so" );
        logToFile       true;
        fields          ( U p T omega nut );
        executeControl  timeStep;
        type            volumeReport;
        region          region0;
        enabled         true;
        outputFileFormat tsv;
    }
    SR
    {
        functionObjectLibs ( "libreport.so" );
        logToFile       yes;
        weighting       area;
        fluxName        phi;
        fields          ( T );
        surfaces        ( { type patch ; name wall_flap ; } );
        constraints     ( );
        executeControl  onEnd;
        type            surfaceReport;
        writeControl    onEnd;
        outputFileFormat tsv;
    }
    SR_window
    {
        functionObjectLibs ( "libreport.so" );
        logToFile       yes;
        weighting       area;
        fluxName        phi;
        fields          ( T );
        surfaces        ( { type patch ; name wall_window ; } );
        constraints     ( );
        executeControl  onEnd;
        type            surfaceReport;
        writeControl    onEnd;
        outputFileFormat tsv;
    }
    SR_window_slave
    {
        functionObjectLibs ( "libreport.so" );
        logToFile       yes;
        weighting       area;
        fluxName        phi;
        fields          ( T );
        surfaces        ( { type patch ; name wall_window_slave ; } );
        constraints     ( );
        executeControl  timeStep;
        type            surfaceReport;
        outputFileFormat tsv;
    }
    comfort
    {
        functionObjectLibs ( "libutilityFunctionObjects.so" );
        writeControl    writeTime;
        type            thermalComfort;
        clo             0.3;
        met             1.2;
        work            0;
        RH              50;
        Tu              10;
    }
}


// ************************************************************************* //
