/*---------------------------------------------------------------------------*\
|       o        |
|    o     o     |  HELYX (R) : Open-source CFD for Enterprise
|   o   O   o    |  Version : 4.4.0
|    o     o     |  ENGYS Ltd. <http://engys.com/>
|       o        |
\*---------------------------------------------------------------------------
License
    This file is part of HELYXcore.
    HELYXcore is based on OpenFOAM (R) <http://www.openfoam.org/>.

    HELYXcore is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    HELYXcore is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    for more details.

    You should have received a copy of the GNU General Public License
    along with HELYXcore.  If not, see <http://www.gnu.org/licenses/>.

Copyright
    (c) 2015-2019 OpenCFD Ltd.
    (c) 2020-2025 Engys Ltd.

Class
    Foam::functionObjects::runTimeVis::surfaceStatistics

Group
    grpGraphicsFunctionObjects

Description
    Generate statistics (average, min, max, standard deviation) over some surfaces.

    The functionality makes use of the VTK libraries (see http://www.vtk.org)
    which provide a broad set of functionality for scene composition and
    manipulation.

    The statistics are generated based on source items that are described in
    the PostDict file generated by the Helyx GUI.
    This is a complex file, and even a brief description of how it works is
    beyond the scope of this comment.

    The surfaceStatistics instance uses the postDictObjectProviderDatabase to
    share the object data with other grpGraphicsFunctionObjects, like the
    runTimeVisualisation

SourceFiles
    surfaceStatistics.C

\*---------------------------------------------------------------------------*/

#pragma once

#include <memory>

#include "rtppFunctionObject.H"
#include "dictionaries/dictionaries.H"
#include "surfaceIntegralData.H"
#include "surfaceStatisticsWriter.H"

#include "postDictObjectProviderDatabase.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Forward declarations

namespace Foam::functionObjects
{

/*---------------------------------------------------------------------------*\
                   Class surfaceStatistics Declaration
\*---------------------------------------------------------------------------*/

class surfaceStatistics : public rtppFunctionObject
{

private:

    // Private member variables
    runTimeVis::Dictionaries dictionaries_;

    writeFile fileWriter_;

    runTimeVis::PostDictObjectProviderDatabase database_;

    surfaceStat::SurfaceIntegralData data_;
    surfaceStat::SurfaceStatisticsWriter writer_;

    // Private Member Functions

    void beforeWriting();
    void writeData();
    void afterWriting();

    static void turnFloatingPointExceptionsOff();
    static void turnFloatingPointExceptionsOn();

public:

    //- Runtime type information
    TypeName("surfaceStatistics");

    // Constructors

    //- Construct from dictionary
    surfaceStatistics
        (
            const word &name,
            const Time &runTime,
            const dictionary &dict
        );


    //- Destructor
    ~surfaceStatistics() override = default;

    // Member Functions

    //- Execute, currently does nothing
    bool execute() override
    { return true; }

    bool write() override;
};


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

} // End namespace

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// ************************************************************************* //
