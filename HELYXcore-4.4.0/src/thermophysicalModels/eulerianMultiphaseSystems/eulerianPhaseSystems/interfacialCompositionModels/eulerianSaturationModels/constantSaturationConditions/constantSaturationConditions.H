/*---------------------------------------------------------------------------*\
|       o        |
|    o     o     |  HELYX (R) : Open-source CFD for Enterprise
|   o   O   o    |  Version : 4.4.0
|    o     o     |  ENGYS Ltd. <http://engys.com/>
|       o        |
\*---------------------------------------------------------------------------
License
    This file is part of HELYXcore.
    HELYXcore is based on OpenFOAM (R) <http://www.openfoam.org/>.

    HELYXcore is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    HELYXcore is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    for more details.

    You should have received a copy of the GNU General Public License
    along with HELYXcore.  If not, see <http://www.gnu.org/licenses/>.

Copyright
    (c) 2015 OpenFOAM Foundation

Class
    Foam::eulerianSaturationModels::constantSaturationConditions

Description
    Constant saturation pressure and temperature.

SourceFiles
    constantSaturationConditions.C

\*---------------------------------------------------------------------------*/

#ifndef constantSaturationConditions_H
#define constantSaturationConditions_H

#include "../eulerianSaturationModel/eulerianSaturationModel.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

namespace Foam
{
namespace eulerianSaturationModels
{

/*---------------------------------------------------------------------------*\
                         Class constantSaturationConditions Declaration
\*---------------------------------------------------------------------------*/

class constantSaturationConditions
:
    public eulerianSaturationModel
{
protected:

    // Private data

        //- Constant saturation pressure
        dimensionedScalar pSat_;

        //- Constant saturation temperature
        dimensionedScalar Tsat_;


public:

    //- Runtime type information
    TypeName("constant");

    // Constructors

        //- Construct from a dictionary
        constantSaturationConditions(const dictionary& dict);


    //- Destructor
    virtual ~constantSaturationConditions();


    // Member Functions

        //- Saturation pressure
        virtual tmp<volScalarField> pSat(const volScalarField& T) const;

        //- Saturation pressure derivetive w.r.t. temperature
        virtual tmp<volScalarField> pSatPrime(const volScalarField& T) const;

        //- Natural log of the saturation pressure
        virtual tmp<volScalarField> lnPSat(const volScalarField& T) const;

        //- Saturation temperature
        virtual tmp<volScalarField> Tsat(const volScalarField& p) const;
};


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

} // End namespace eulerianSaturationModels
} // End namespace Foam

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#endif

// ************************************************************************* //
