/*---------------------------------------------------------------------------*\
|       o        |
|    o     o     |  HELYX (R) : Open-source CFD for Enterprise
|   o   O   o    |  Version : 4.4.0
|    o     o     |  ENGYS Ltd. <http://engys.com/>
|       o        |
\*---------------------------------------------------------------------------
License
    This file is part of HELYXcore.
    HELYXcore is based on OpenFOAM (R) <http://www.openfoam.org/>.

    HELYXcore is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    HELYXcore is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    for more details.

    You should have received a copy of the GNU General Public License
    along with HELYXcore.  If not, see <http://www.gnu.org/licenses/>.

Copyright
    (c) Creative Fields, Ltd.
    (c) 2024 Engys Ltd.

Authors
    Franjo Juretic (franjo.juretic@c-fields.com)

Class
    triSurfaceCopyParts

Description
    Copies user-selected surface parts into a new surface mesh

SourceFiles
    triSurfaceCopyParts.C

\*---------------------------------------------------------------------------*/

#ifndef triSurfaceCopyParts_H
#define triSurfaceCopyParts_H

#include "utilities/meshes/triSurf/triSurf.H"
#include "primitives/bools/lists/boolList.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

namespace Foam
{

/*---------------------------------------------------------------------------*\
                Class triSurfaceCopyParts Declaration
\*---------------------------------------------------------------------------*/

class triSurfaceCopyParts
{
    // Private data

        //- Reference to triSurf
        const triSurf& surf_;


    // Private member functions

        //- Mark facets which shall be copied
        void markFacetsForCopying(const wordList&, boolList&) const;

        //- Copies data to a new surface mesh
        void copySurfaceMesh(const boolList&, triSurf&) const;


public:

    // Constructors

        //- Construct from octree
        triSurfaceCopyParts(const triSurf& surface);

        //- Disallow default bitwise copy construction
        triSurfaceCopyParts(const triSurfaceCopyParts&) = delete;


    //- Destructor
    ~triSurfaceCopyParts();


    // Member Functions

        //- copies selected patches/subsets to an already created mesh
        void copySurface(const wordList&, triSurf&) const;

        //- creates a new surface mesh and copies selected patches/subsets
        triSurf* copySurface(const wordList&) const;


    // Member Operators

        //- Disallow default bitwise assignment
        void operator=(const triSurfaceCopyParts&) = delete;
};

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

} // End namespace Foam

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#endif

// ************************************************************************* //
