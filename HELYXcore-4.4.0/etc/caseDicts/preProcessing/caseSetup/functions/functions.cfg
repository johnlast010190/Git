functions
{
    zoneForces
    {
        requiredEntries ();

        functionObjectLibs ("libforces.so");
        nAveragingSteps 1;
        verbose true;
        logToFile true;
        executeControl timeStep;
    }

    fieldWrite
    {
        requiredEntries
        (
            writeControl writeInterval spanControl fields
        );

        functionObjectLibs ("libfieldFunctionObjects.so");
        spanControl none;
        fields ();
        writeControl timeStep;
    }
    patchWrite
    {
        requiredEntries
        (
            patches fields
        );

        functionObjectLibs ("libreport.so");
        patches ();
        fields ();
        nearCellValues off;
        writeControl timeStep;
    }
    printDictionary
    {
        requiredEntries
        (
            dictionaries
        );

        functionObjectLibs ("libreport.so");
        debug 0;
        dictionaries ();
    }
    surfaceReport
    {
        requiredEntries
        (
            fields
            surfaces
        );

        functionObjectLibs ("libreport.so");
        logToFile yes;
        weighting area;
        fluxName phi;
        fields ();
        surfaces ();
        constraints ();
        executeControl timeStep;
    }
    surfaces
    {
        requiredEntries
        (
            fields
            surfaces
        );

        functionObjectLibs ("libsampling.so");

        fields ();
        interpolationScheme cellPoint;
        surfaceFormat vtk;

        surfaces ();
        writeControl    writeTime;
    }
    probes
    {
        requiredEntries
        (
            fields
            probeLocations
        );

        functionObjectLibs ("libsampling.so");
        enabled         true;
        probeLocations ();
        fields ();
        executeControl    timeStep;
    }
    volumeReport
    {
        requiredEntries
        (
            fields
        );

        functionObjectLibs ("libreport.so");
        logToFile yes;
        fields ();
        executeControl    timeStep;
    }
    turboPerformance
    {
        log             true;
        //rhoName         rhoInf;
        //rhoInf          1.2;
        //CofR            ( 0 0 0 );
        functionObjectLibs ("libforces.so");

        requiredEntries
        (
            inletPatches
            outletPatches
            patches
        );
        executeControl    timeStep;
    }
    fieldBlendingFactor
    {
        functionObjectLibs ( "libfieldFunctionObjects.so" );

        requiredEntries
        (
            blendingSources
            fieldBlending
        );
        executeControl      timeStep;
        writeControl        writeTime;
    }
    courant
    {
        requiredEntries ();

        functionObjectLibs ( "libreport.so" );
        executeControl    timeStep;
    }
    fieldProcess
    {
        requiredEntries
        (
            operations
        );

        functionObjectLibs ( "libfieldFunctionObjects.so" );
        operations ();
        executeControl    timeStep;
        writeControl    writeTime;
    }
    heatBalance
    {
        requiredEntries ();

        functionObjectLibs ( "libutilityFunctionObjects.so" );
        referenceTemperature referenceTemperature [ 0 0 0 1 0 0 0 ] 273.15;
        logToFile true;
        phi phi;
        executeControl    timeStep;
    }
    liftDrag
    {
        requiredEntries
        (
            patches Uinf rhoInf liftDirection dragDirection
            referenceArea referenceLength wheelbase
        );

        patches ( );

        functionObjectLibs ( "libforces.so" );
        porosity true;
        nAveragingSteps 1;
        outputRegionData false;
        binData //optional
        {
            nBins 10;
            axis (1 0 0);
        }

        maxCp 1e15;
        minCp -1e15;

        Uinf (38.89 0 0);
        rhoInf 1.227;
        liftDirection (0 0 1);
        dragDirection (1 0 0);

        referenceArea  1;
        referenceLength 1;
        referencePoint (0 0 0);
        wheelbase   1;
        executeControl    timeStep;
    }

    fieldAverage
    {
        requiredEntries ( fields );

        functionObjectLibs ("libfieldFunctionObjects.so");
        fields ();
        executeControl    timeStep;
        writeControl    writeTime;
    }

    forces
    {
        requiredEntries ( patches );

        functionObjectLibs ("libforces.so");
        directForceDensity false;
        p       p;
        U       U;
        rhoName rhoInf;
        rhoInf  1;
        pRef 0;
        CofR (0 0 0); //centre of rotation
        patches ( wallNames );

        executeControl    timeStep;
    }

    ensight
    {
        functionObjectLibs ( "libutilityFunctionObjects.so" );
        type            ensightWrite;
        format          ascii;
        fields ();
        writeControl    writeTime;
    }

    thermalComfort
    {
        functionObjectLibs ("libutilityFunctionObjects.so");
        writeControl    writeTime;
    }

    fieldMinMax
    {
        type        fieldMinMax;
        libs        ("libfieldFunctionObjects.so");

        location    yes;
        mode        magnitude;

        requiredEntries (fields);
        executeControl    timeStep;
    }
}



/*
// unsupported function objects
    sets
    forceCoeffs
    faceSource
    cellSource
    staticPressure
    readFields
    surfaceInterpolateFields
    dsmcFields
    writeRegisteredObject
    systemCall
    subVolume
    passiveScalarTransport
    adjustableTimeStep
    {
        requiredEntries (targetCFL);

        functionObjectLibs ( "libturbTools.so" );
        targetCFL 1;
        phiName phi;
        maxDeltaT 1;
        maxMean max;
    }
*/
