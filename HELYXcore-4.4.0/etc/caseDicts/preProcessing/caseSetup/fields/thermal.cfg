T
{
    vRefv 300;
    vRef uniform $vRefv;
    allowedFieldInitialisationMethods (default fixedValue boundaryValue cellSet Laplace);
    initialisation{type fixedValue; value $vRef; priority 4;}
    solver smoothSolver;

    fieldDefinition
    {
        type scalar;
        dimensions [ 0 0 0 1 0 0 0 ];
        internalField $vRef;

        boundaryTypeDefaults
        {
            wall {type zeroGradient; value $vRef;}
            mappedWall {type zeroGradient; value $vRef;}
            outlet {type inletOutlet; inletValue $vRef; value $vRef;}
            inlet {type fixedValue; value $vRef;}
            patch {type inletOutlet; inletValue $vRef; value $vRef;}
            inactive{type fixedValueZone; value $vRef; cellZoneValue $vRefv;}
            indirectWall {$wall}
            invisible {type zeroGradient;}
        }
        boundaryConditions
        {
        }
    }
    remove vRef;
    remove vRefv;
}

Tincompressible
{
    $T
    fieldDefinition
    {
        boundaryTypeDefaults
        {
            wall
            {
                type incompressible::turbulentHeatFluxTemperature;
                heatSource flux;
                q uniform 0;
            }
            indirectWall {$wall}
        }
    }
}

Tcompressible
{
    $T
    fieldDefinition
    {
        boundaryTypeDefaults
        {
            wall
            {
                type turbulentHeatFluxTemperature;
                heatSource flux;
                q uniform 0;
                kappaMethod     fluidThermo;
                kappaName       none;
                QrName          Qr;
            }
            indirectwall {$wall}
        }
    }
}

TRegionCoupledUSF
{
    $Tcompressible

    fieldDefinition
    {
        boundaryTypeDefaults
        {
            mappedWall
            {
                type            regionCoupledEnergyFlux;
                value           uniform 300;
            }
        }
    }
}

Tsolid
{
    $Tcompressible
    fieldDefinition
    {
        boundaryTypeDefaults
        {
            wall
            {
                kappaMethod           solidThermo;
            }
            indirectWall {$wall}
        }
    }
}

TsolidRegionCoupledUSF
{
    $Tsolid
    fieldDefinition
    {
        boundaryTypeDefaults
        {
            mappedWall
            {
                type                  regionCoupledEnergyFlux;
                value                 uniform 300;
            }
        }
    }
}


THisa
{
    $Tcompressible
    vRef (0 0 0);
    pRef 100000;
    TRef 300;

    fieldDefinition
    {
        boundaryTypeDefaults
        {
            wall
            {
                type characteristicWallTemperature;
                value uniform $TRef;
            }
            mappedWall
            {
                type characteristicWallTemperature;
                value uniform $TRef;
            }
            outlet
            {
                type characteristicPressureInletOutletTemperature;
                U $vRef;
                p $pRef;
                T $TRef;
                value uniform $TRef;
            }
            inlet
            {
                type characteristicPressureInletOutletTemperature;
                U $vRef;
                p $pRef;
                T $TRef;
                value uniform $TRef;
            }
            patch
            {
                type characteristicFarfieldTemperature;
                U $vRef;
                p $pRef;
                T $TRef;
                value uniform $TRef;
            }
            inactive{type fixedValueZone; value uniform $TRef; cellZoneValue $TRef;}
            indirectWall {$wall}
            invisible {type zeroGradient;}
        }
    }
    #remove vRef;
    #remove pRef;
    #remove TRef;
}

Tcalculated
{
    $T
    vRef uniform 300;
    allowedFieldInitialisationMethods (default fixedValue boundaryValue cellSet);
    initialisation {type fixedValue; value $vRef;}


    fieldDefinition
    {
        boundaryTypeDefaults
        {
            wall{type calculated; value $vRef;}
            inactive{type calculated; value $vRef;}
            mappedWall{ type calculated; value $vRef;}
            outlet{ type calculated; value $vRef;}
            inlet{ type calculated; value $vRef;}
            patch{ type calculated; value $vRef;}
            indirectWall {$wall}
            invisible {$wall}
        }
        boundaryConditions
        {
        }
    }
    #remove vRef;
}


Intensity
{
    allowedFieldInitialisationMethods (default fixedValue meanSurfaceIntensity cellSet);
    initialisation{type meanSurfaceIntensity; emissivity 1; sigmaSB 5.6704e-8; T T;}
    solver smoothSolver;

    fieldDefinition
    {
        type scalar;
        dimensions      [1 0 -3 0 0 0 0];
        internalField   uniform 0;

        boundaryTypeDefaults
        {
            wall {type greyDiffusiveRadiation; T T; emissivity uniform 0.8; value uniform 0;}
            indirectWall {type greyDiffusiveRadiation; T T; emissivity uniform 0.8; value uniform 0;}
            inactive {type fixedValueZone; value uniform 0;}
            mappedWall {type greyDiffusiveRadiation; T T; emissivity uniform 0.8; value uniform 0;}
            outlet {type greyDiffusiveRadiation; T T; emissivity uniform 1; value uniform 0;}
            inlet {type greyDiffusiveRadiation; T T; emissivity uniform 1; value uniform 0;}
            patch {type greyDiffusiveRadiation; T T; emissivity uniform 1; value uniform 0;}
            indirectWall {$wall}
            invisible {type zeroGradient;}
        }
        boundaryConditions
        {
        }
    }

}

IntensitySolid
{
    allowedFieldInitialisationMethods (default fixedValue meanSurfaceIntensity cellSet);
    initialisation{type meanSurfaceIntensity; emissivity 1; sigmaSB 5.6704e-8; T T;}
    solver smoothSolver;

    fieldDefinition
    {
        type scalar;
        dimensions      [1 0 -3 0 0 0 0];
        internalField   uniform 0;

        boundaryTypeDefaults
        {
            wall {type calculated; value uniform 0;}
            mappedWall {type calculated; value uniform 0;}
            outlet {type calculated; value uniform 0;}
            inlet {type calculated; value uniform 0;}
            patch {type calculated; value uniform 0;}
            inactive {type calculated; value uniform 0;}
            indirectWall {$wall}
            invisible {$wall}
        }
        boundaryConditions
        {
        }
    }

}
