$buoyantPimpleFoamRAS
stateType reactingFoamRAS;

fieldMaps
{
    U U;
    p_rgh pbuoyant;
    T Tcompressible;
    Ydefault species;   
}

system
{
    fvSchemes
    {
        ddtSchemes{default Euler;}

        gradSchemes
        {
            default cellLimited Gauss linear 1;
            gradU cellLimited Gauss linear 1;
            grad(p_rgh) leastSquares;
            #remove "grad(p)"
        }

        divSchemes
        {
            div(phi,U) Gauss linearUpwindV gradU;
            div(phi,h) Gauss linearUpwind grad(h);
            div(phi,K) Gauss linearUpwind grad(K);
            div(phi,Yi_h) Gauss limitedLinear01 1;
            div(phi,Yi) Gauss limitedLinear01 1;
            div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;
        }
        fluxRequired
        {
            p_rgh;
        }
    }
    fvSolution
    {
        solvers 
        {
            Yi{#include "../settings/matrixSolvers/steadySmoothSolver.cfg"}
            YiFinal{#include "../settings/matrixSolvers/transientSmoothSolver.cfg"}
        }
    }
    controlDict
    {
        application     rhoReactingBuoyantFoam;
    }
}
