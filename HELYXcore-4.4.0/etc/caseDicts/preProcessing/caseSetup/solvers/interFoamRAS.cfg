fieldMaps
{
    U U;
    p_rgh pmultiphase;
    alpha phase;
}

system
{
    fvSchemes
    {
        ddtSchemes {default Euler;}

        gradSchemes 
        {
            default              Gauss linear;
            grad(alpha)          edgeCellsLeastSquares;
            gradU                cellLimited Gauss linear 1;
            grad(p_rgh)          leastSquares;
        }
        
        divSchemes
        {
            div(rhoPhi,U)  Gauss linearUpwindV gradU;
            div(phi,alpha)  Gauss vanLeer;
            div(phirb,alpha) Gauss linear;
            $fvSchemes_divSchemes_common       
        }

        $fvSchemes_misc
    }

    fvSolution
    {
        solvers 
        {
            "alpha.*"
            {
                solver          smoothSolver;
                smoother        symGaussSeidel;

                nAlphaCorr      1;
                nAlphaSubCycles 3;
                cAlpha          1;

                MULESCorr       yes;
                nLimiterIter    5;

                tolerance       1e-8;
                relTol          0;

                nSweeps 			1;
                minIter 			1;
		        alphaApplyPrevCorr	yes;
            }

            "pcorr.*"
            {
                vTol 1e-6;
                vRelTol 0.0;
                #include "../settings/matrixSolvers/PCGGAMG.cfg"
                #remove vTol
                #remove vRelTol
            }
            p_rgh
            {
                #include "../settings/matrixSolvers/steadyGAMG.cfg"
            }
            p_rghFinal
            {
                vTol 1e-8;
                vRelTol 0.0;
                #include "../settings/matrixSolvers/PCGGAMG.cfg"
                #remove vTol
                #remove vRelTol
            }
        
        }
        PIMPLE
        {
            momentumPredictor no;
            nCorrectors     2;
            nOuterCorrectors     1;
            nNonOrthogonalCorrectors 0;
            correctPhi      no;
            moveMeshOuterCorrectors yes;
        }

        relaxationFactors 
        {
            fields
            {
                p               1;
            }
            equations
            {
                U               0.9;
                UFinal          1;

                "alpha.*"   1;
            }
        }
        
        cache{grad(U);}
    }

    controlDict
    {
        application interFoam;
        $controlDict_trans
        writeControl    adjustableRunTime;
        deltaT          0.001;
        writeInterval   0.1;
        
        adjustTimeStep 	yes;
        maxCo          	0.666;
		maxAlphaCo      0.333;
        maxDeltaT      	1.0;
    }


}

constant
{
    g{$g}                
}
