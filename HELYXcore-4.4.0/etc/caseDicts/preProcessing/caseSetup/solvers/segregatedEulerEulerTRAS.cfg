$segregatedTRAS

stateType tHelyxSegregatedEulerEulerRAS;

global
{
	system
	{
		controlDict
		{
            $controlDict_trans

            adjustTimeStep 	yes;
            maxCo          	0.666;
            maxAlphaCo      0.333;
            maxDeltaT      	1;
		}
	}
}

fieldMaps
{
    alpha phaseEuler;
    U Umultiphase;
}

materialProperties
{
    materialType multiphase;
    buoyancyModel rhoModel;

    multiphaseSystem heatAndMomentumTransfer;
    multiphaseSystemCoeffs
    {
        blending
        {
            default
            {
                type            linear;
                minFullyContinuousAlpha 0.7;
                minPartlyContinuousAlpha 0.5;
            }
        }
    }
}

#include "multicomponent.cfg"
#include "buoyancy.cfg"

system
{
    fvSchemes
    {
        ddtSchemes
        {
            default Euler;
        }

        gradSchemes
        {
            grad(alpha) leastSquares;
            // edgeCellsLeastSquares is not robust for some reason
            //grad(alpha) edgeCellsLeastSquares;
            gradU cellLimited Gauss linear 1;
            grad(p) leastSquares;
        }

        divSchemes
        {
            div(phiv,alpha) Gauss vanLeer;
            div(phivr,alpha,alpha) Gauss vanLeer;

            ~div(phi,U);
            div(alphaPhi,U) Gauss deferred vanLeer;
            div(phiv,U)      Gauss deferred vanLeer;

            div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;
        }

        laplacianSchemes
        {
            ~laplacian(rhorAUf,p);
            laplacian(rAUf,p) Gauss linear limited 0.333;
            ~laplacian((rho*nuEff),U) Gauss linear limited 0.333;
        }
    }
    fvSolution
    {
        solvers
        {
            "alpha.*"
            {
                solver          PBiCGStab;
                smoother        symGaussSeidel;
                preconditioner  DILU;
                tolerance       1e-10;
                relTol          0;
            }
            ~U;
            ~UFinal;
            "U.*"{#include "../settings/matrixSolvers/steadySmoothSolver.cfg"}
            "U.*Final"{#include "../settings/matrixSolvers/transientSmoothSolver.cfg"}
        }
        PIMPLE
        {
            nCorrectors 3;
            nOuterCorrectors 1;
            nNonOrthogonalCorrectors 0;
            ~momentumPredictor;
        }
        relaxationFactors
        {
            fields
            {
                p               1;
                ~rho;
            }
            equations
            {
                ~U;
                ~UFinal;
                "U.*"           1;
                "alpha.*"       1;
            }
        }
    }
    fvOptions
    {
        flowSolver
        {
            type multiphaseEulerSegregatedFlowSolver;
        }

        volumeFractionSolver
        {
            type MULESVolumeFractionSolver;
            nAlphaSubCycles 3;
        }
    }
}
