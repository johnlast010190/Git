$segregatedVOFTLES
stateType tHelyxSegregatedVOFLES;

global
{
    system
    {
        controlDict
        {
            writeControl    adjustableRunTime;
            deltaT          0.001;
            writeInterval   0.1;

            adjustTimeStep 	yes;
            maxCo          	0.666;
            maxAlphaCo      0.333;
            maxDeltaT      	1.0;

            libs ( "libHelyxEcomarine.so" );
        }
    }
}

system
{
    fvSchemes
    {
        gradSchemes
        {
            default         Gauss linear;
        }

        divSchemes
        {
            div(phi,k)      bounded Gauss linearUpwind turbulence;
            div(phi,omega)  bounded Gauss linearUpwind turbulence;
        }
    }

    fvSolution
    {
        solvers
        {
            "alpha.*"
            {
                solver          smoothSolver;
                smoother        symGaussSeidel;
                tolerance       1e-10;
                relTol          0;
                nSweeps 		1;
                minIter 		1;
            }

            pFinal
            {
                vTol 1e-8;
                vRelTol 0.0;
                #include "../settings/matrixSolvers/PCGGAMG.cfg"
                #remove vTol
                #remove vRelTol
            }
        }
        PIMPLE
        {
            momentumPredictor yes;
            nCorrectors 3;
            nOuterCorrectors 1;
            nNonOrthogonalCorrectors 0;
            refineMeshOuterCorrectors no;
        }

        relaxationFactors
        {
            fields
            {
                p 1;
            }
            equations
            {
                U 0.9;
            }
        }
    }
    fvOptions
    {
        volumeFractionSolver
        {
            type MULESVolumeFractionSolver;

            nAlphaCorr      3;
            nAlphaSubCycles 1;
            cAlpha          1;

            MULESCorr       yes;
            nLimiterIter    10;

            alphaApplyPrevCorr	no;
            icAlpha             0;
        }
        waveSource
        {
            type waveSource;
        }
    }
}

fields
{
    U
    {
        allowedFieldInitialisationMethods (default fixedValue boundaryValue potentialFlow cellSet);
        initialisation {type default; priority 2;}
        solver smoothSolver;
        vRef uniform (0 0 0);

        fieldDefinition
        {
            type vector;
            dimensions [ 0 1 -1 0 0 0 0 ];
            internalField $vRef;

            boundaryTypeDefaults
            {
                wall {type wallVelocity; value $vRef;}
                mappedWall {type wallVelocity; value $vRef;}
                outlet {type inletOutlet; inletValue $vRef; value $vRef;}
                inlet {type fixedValueVelocity; value $vRef;}
                patch {type pressureInletOutletVelocity; value $vRef;}
                inactive {type fixedValueZone; value $vRef;}
                indirectWall {$wall}
                invisible {type zeroGradient;}
            }
            boundaryConditions
            {
            }
        }
        #remove vRef;
    }
    p
    {
        vRef uniform 0;

        fieldDefinition
        {
            boundaryTypeDefaults
            {
                outlet {type fixedprghPressure; p_rgh $vRef; value $vRef;}
            }
        }
        #remove vRef;
    }
}
