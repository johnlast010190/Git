radiation
{
    fieldMaps
    {
        IDefault Intensity;
    }

    system
    {
        fvSchemes
        {
            divSchemes
            {
                div(Ji,Ii_h)    bounded Gauss upwind;
            }
        }
        fvSolution
        {
            solvers
            {
                Ii
                {
                    solver              GAMG;
                    tolerance           1e-6;
                    relTol              0.1;
                    smoother            symGaussSeidel;
                    cacheAgglomeration  true;
                    nCellsInCoarsestLevel   10;
                    agglomerator        faceAreaPair;
                    mergeLevels         1;
                    minIter             1;
                    maxIter             3;
                    nPreSweeps          0;
                    nPostSweeps         1;
                }
            }
            relaxationFactors
            {
                equations
                {
                    "ILambda.*"     1;
                }
            }
        }
    }

    functions
    {
    }

    constant
    {
        radiationProperties
        {
            $radiationProperties
            participating no;
        }

        boundaryRadiationProperties
        {
            $boundaryRadiationProperties
        }
    }

    requirements
    {
        OR
        (
            buoyantBousinesqPimpleFoamRAS
            buoyantBousinesqPimpleFoamLES
            buoyantBousinesqSimpleFoam

            rhoPimpleFoamRAS
            rhoPimpleFoamLES
            rhoSimpleFoam

            buoyantSimpleFoam
            buoyantPimpleFoamRAS
            buoyantPimpleFoamLES

            chtMultiRegionSimpleFoamFluid
            chtMultiRegionFoamFluid

            pressureCoupledS
            pressureCoupledTRAS
            pressureCoupledTLES

            segregatedS
            segregatedTRAS
            segregatedTLES
        );
        conditional
        {
            options
            {
                system
                {
                    fvOptions
                    {
                        radiationSolver
                        {
                            type radiationSolver;
                        }
                    }
                }
            }

            "segregated.*" {$options}
            "pressureCoupled.*" {$options}
        }
    }
}
