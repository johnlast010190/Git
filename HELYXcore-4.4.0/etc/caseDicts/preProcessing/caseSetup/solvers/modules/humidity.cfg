humidity
{
    fieldMaps
    {
        w humidity;
        Dtw D;
    }

    system
    {
        fvSchemes
        {
            divSchemes
            {
                div(phi,w)      bounded Gauss deferred vanLeer;
                div(phiVdiff,T) bounded Gauss deferred vanLeer;
                div(phiVdiff,h) bounded Gauss deferred vanLeer;
                div(phiVdiff,e) bounded Gauss deferred vanLeer;
            }
        }
        fvSolution
        {
            solvers
            {
                w {#include "../../settings/matrixSolvers/steadySmoothSolver.cfg"}
            }
            relaxationFactors
            {
                equations
                {
                    w 0.7;
                }
            }
        }
        fvOptions
        {
            Yhumidity
            {
                type concentrationTransport;
                active true;
                hookOp operator;
                fieldName w;
            }
        }
    }
    requirements
    {
        AND ();
        OR
        (
            buoyantBousinesqPimpleFoamRAS
            buoyantBousinesqPimpleFoamLES
            buoyantBousinesqPimpleFoamRAS2
            buoyantBousinesqPimpleFoamLES2
            buoyantBousinesqSimpleFoam
            buoyantBousinesqSimpleFoam2

            rhoSimpleFoam
            rhoSimpleFoam2
            rhoPimpleFoamRAS
            rhoPimpleFoamLES
            rhoPimpleFoamRAS2
            rhoPimpleFoamLES2

            buoyantSimpleFoam
            buoyantSimpleFoam2
            buoyantPimpleFoamRAS
            buoyantPimpleFoamRAS2
            buoyantPimpleFoamLES
            buoyantPimpleFoamLES2

            pressureCoupledS
            pressureCoupledTRAS
            pressureCoupledTLES

            segregatedS
            segregatedTRAS
            segregatedTLES
        );

        conditional
        {
            physicalValues
            {
                Dw   Dw   [0 2 -1 0 0 0 0] 2.42e-5;
                Sctw Sctw [0 0 0 0 0 0 0] 0.7;
                Cpw Cpw [0 2 -2 -1 0 0 0] 1930;
            }
            constantTransport
            {
                constant
                {
                    transportProperties
                    {
                        $physicalValues
                        pRef pRef [ 1 -1 -2 0 0 0 0 ] 101325;
                    }
                }
            }
            constantThermo
            {
                constant
                {
                    thermophysicalProperties
                    {
                        $physicalValues
                    }
                }
            }
            systemMaterials
            {
                materialProperties
                {
                    wconcentrationTransport
                    {
                        D [0 2 -1 0 0 0 0] 2.42e-5;
                        Cp [0 2 -2 -1 0 0 0] 1930;
                        Sct 0.7;
                    }
                }
            }
            transIncomp
            {
                system
                {
                    fvSolution
                    {
                        solvers
                        {
                            w{#include "../../settings/matrixSolvers/transientSmoothSolver.cfg"}
                            wFinal{#include "../../settings/matrixSolvers/transientSmoothSolver.cfg"}
                        }
                        relaxationFactors
                        {
                            equations
                            {
                                w 1;
                                wFinal 1;
                            }
                        }
                    }
                    fvOptions
                    {
                        Yhumidity
                        {
                            hookField T;
                        }

                        humidityThermalSource
                        {
                            type            humidityThermalSource;
                            active          on;
                            humidityThermalSourceCoeffs
                            {
                                humidity        "Yhumidity";
                                fieldNames      (T);
                            }
                        }
                    }
                }
            }
            "buoyantBousinesqPimpleFoam.*" {$transIncomp $constantTransport}

            steadyIncomp
            {
                system
                {
                    fvOptions
                    {
                        Yhumidity
                        {
                            hookField T;
                        }

                        humidityThermalSource
                        {
                            type            humidityThermalSource;
                            active          on;
                            humidityThermalSourceCoeffs
                            {
                                humidity        "Yhumidity";
                                fieldNames      (T);
                            }
                        }
                    }
                }
            }
            "buoyantBousinesqSimpleFoam.*" {$steadyIncomp $constantTransport}

            transComp
            {
                fieldMaps
                {
                    w   humidityCmp;
                    Dtw Dcompressible;
                }
                system
                {
                    fvSolution
                    {
                        solvers
                        {
                            w {#include "../../settings/matrixSolvers/transientSmoothSolver.cfg"}
                            wFinal{#include "../../settings/matrixSolvers/transientSmoothSolver.cfg"}
                        }
                        relaxationFactors
                        {
                            equations
                            {
                                w 1;
                                wFinal 1;
                            }
                        }
                    }
                    fvOptions
                    {
                        Yhumidity
                        {
                            hookField h;
                        }

                        humidityThermalSource
                        {
                            type            humidityThermalSource;
                            active          on;
                            humidityThermalSourceCoeffs
                            {
                                humidity        "Yhumidity";
                                fieldNames      (h);
                            }
                        }
                    }
                }
            }
            unboundedDiv
            {
                system
                {
                    fvSchemes
                    {
                        divSchemes
                        {
                            div(phi,w)    Gauss deferred vanLeer;
                        }
                    }
                }
            }
            "rhoPimpleFoam.*" {$transComp $unboundedDiv $constantThermo}
            "buoyantPimpleFoam.*" {$transComp $unboundedDiv $constantThermo}

            transSegregatedComp
            {
                $transComp
                system
                {
                    fvOptions
                    {
                        Yhumidity
                        {
                            ~hookOp;
                            ~hookField;
                        }

                        humidityThermalSource
                        {
                            humidityThermalSourceCoeffs
                            {
                                ~fieldNames;
                            }
                        }
                    }
                }
            }
            "segregatedT.*" {$transSegregatedComp $systemMaterials}

            transCoupledComp
            {
                $transSegregatedComp
                system
                {
                    fvSolution
                    {
                        relaxationFactors
                        {
                            equations
                            {
                                w 0.7;
                                wFinal 1;
                            }
                        }
                    }
                }
            }
            "pressureCoupledT.*" {$transCoupledComp $systemMaterials}

            steadyComp
            {
                system
                {
                    fvOptions
                    {
                        Yhumidity
                        {
                            hookField h;
                        }

                        humidityThermalSource
                        {
                            type            humidityThermalSource;
                            active          on;
                            humidityThermalSourceCoeffs
                            {
                                humidity        "Yhumidity";
                                fieldNames      (h);
                            }
                        }
                    }
                }
                fieldMaps
                {
                    w   humidityCmp;
                    Dtw Dcompressible;
                }
            }
            "rhoSimpleFoam.*" {$steadyComp $constantThermo}
            "buoyantSimpleFoam.*" {$steadyComp $constantThermo}

            segregatedCompressible
            {
                $steadyComp
                system
                {
                    fvOptions
                    {
                        Yhumidity
                        {
                            ~hookOp;
                            ~hookField;
                        }

                        humidityThermalSource
                        {
                            humidityThermalSourceCoeffs
                            {
                                ~fieldNames;
                            }
                        }
                    }
                }
            }
            segregatedS {$segregatedCompressible $systemMaterials}

            pressureCoupledCompressible
            {
                $segregatedCompressible
                system
                {
                    fvSolution
                    {
                        relaxationFactors
                        {
                            equations
                            {
                                w 0.95;
                            }
                        }
                    }
                }
            }

            pressureCoupledS {$pressureCoupledCompressible $systemMaterials}
        }
        NOT ();
    }
}
