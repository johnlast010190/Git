stateType interFoamRAS;
fieldMaps
{
    U U;
    p pmultiphase;
    alpha phase;
}

system
{
    controlDict
    {
        application     hydro;
        $controlDict_trans
        writeControl    adjustableRunTime;
        deltaT          0.001;
        writeInterval   0.1;
        adjustTimeStep 	yes;
        maxCo          	0.5;
		maxAlphaCo      0.5;
        maxDeltaT      	1.0;
    }

    fvSchemes
    {
        ddtSchemes {default         Euler;}

        gradSchemes 
        {
            default              taylorGauss linear;
            grad(alpha)          edgeCellsLeastSquares;
            grad(p)              faceLeastSquares piecewiseLinearPressure;
        }
        
        divSchemes
        {
            div(rhoPhi,U)    Gauss vanLeerV;
            div(phi,alpha)   Gauss vanLeer;
            div(phirb,alpha) Gauss linear;
            div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;
            div(U)           Gauss linear;
        }

        $fvSchemes_misc
        laplacianSchemes
        {
            default         Gauss linear corrected;
        }

        interpolationSchemes
        {
            default         linear;
        }

        snGradSchemes
        {
            default         corrected;
        }
        fluxRequired
        {
            default         no;
            p;
            pcorr;
            "alpha.*";
        }
    }

    fvSolution
    {
        PIMPLE
        {
            momentumPredictor no;
            nOuterCorrectors 1;
            nCorrectors      3;
            nNonOrthogonalCorrectors 0;
            correctPhi      no;
            pRefCell        0;
            pRefValue       0;
        }
        solvers
        {
            "alpha.*"
            {
                solver          smoothSolver;
                smoother        symGaussSeidel;

                nAlphaCorr      2;
                nAlphaSubCycles 1;
                alphaOuterCorrectors yes;
                cAlpha          1;

                MULESCorr       yes;
                nLimiterIter    5;

                tolerance       1e-8;
                relTol          0;

                minIter 			1;
		        alphaApplyPrevCorr	yes;
            }
        
        
        
            p
            {
                vTol 1e-7;
                vRelTol 0.01;
                #include "../settings/matrixSolvers/GAMG.cfg"
                #remove vTol
                #remove vRelTol
            }
            pcorr{$p}

            pFinal
            {
                vTol 1e-8;
                vRelTol 0.0;
                #include "../settings/matrixSolvers/PCGGAMG.cfg"
                #remove vTol
                #remove vRelTol
            }
            pcorrFinal{$pFinal}
            
            U{#include "../settings/matrixSolvers/steadySmoothSolver.cfg"}
            UFinal{#include "../settings/matrixSolvers/transientSmoothSolver.cfg"}
        }
        relaxationFactors
        {
            fields
            {
            }
            equations
            {
                U       1;
                UFinal $U;
            }
        }

    }
}

constant
{
    g{$g}                
}
